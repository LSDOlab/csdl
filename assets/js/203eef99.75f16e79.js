"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9679],{3905:function(e,n,r){r.d(n,{Zo:function(){return l},kt:function(){return f}});var t=r(7294);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function a(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function s(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?a(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function i(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},a=Object.keys(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=t.createContext({}),p=function(e){var n=t.useContext(c),r=n;return e&&(r="function"==typeof e?e(n):s(s({},n),e)),r},l=function(e){var n=p(e.components);return t.createElement(c.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},m=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),m=p(r),f=o,d=m["".concat(c,".").concat(f)]||m[f]||u[f]||a;return r?t.createElement(d,s(s({ref:n},l),{},{components:r})):t.createElement(d,s({ref:n},l))}));function f(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=r.length,s=new Array(a);s[0]=m;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i.mdxType="string"==typeof e?e:o,s[1]=i;for(var p=2;p<a;p++)s[p]=r[p];return t.createElement.apply(null,s)}return t.createElement.apply(null,r)}m.displayName="MDXCreateElement"},1576:function(e,n,r){r.r(n),r.d(n,{frontMatter:function(){return i},contentTitle:function(){return c},metadata:function(){return p},toc:function(){return l},default:function(){return m}});var t=r(7462),o=r(3366),a=(r(7294),r(3905)),s=["components"],i={},c=void 0,p={unversionedId:"worked_examples/ex_reshape_vector2_tensor",id:"worked_examples/ex_reshape_vector2_tensor",isDocsHomePage:!1,title:"ex_reshape_vector2_tensor",description:"`py",source:"@site/docs/worked_examples/ex_reshape_vector2_tensor.mdx",sourceDirName:"worked_examples",slug:"/worked_examples/ex_reshape_vector2_tensor",permalink:"/csdl/docs/worked_examples/ex_reshape_vector2_tensor",editUrl:"https://github.com/lsdolab/csdl/edit/main/website/docs/worked_examples/ex_reshape_vector2_tensor.mdx",tags:[],version:"current",frontMatter:{}},l=[],u={toc:l};function m(e){var n=e.components,r=(0,o.Z)(e,s);return(0,a.kt)("wrapper",(0,t.Z)({},u,r,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py"},"from csdl_om import Simulator\nfrom csdl import Model\nimport csdl\nimport numpy as np\n\n\nclass ExampleVector2Tensor(Model):\n    def define(self):\n        shape = (2, 3, 4, 5)\n        size = 2 * 3 * 4 * 5\n\n        # Both vector or tensors need to be numpy arrays\n        tensor = np.arange(size).reshape(shape)\n        vector = np.arange(size)\n\n        # in2 is a vector having a size of 2 * 3 * 4 * 5\n        in2 = self.declare_variable('in2', val=vector)\n\n        # in2 is being reshaped from size =  2 * 3 * 4 * 5 to a ten\xdfsor\n        # having shape = (2, 3, 4, 5)\n        self.register_output('reshape_vector2tensor',\n                             csdl.reshape(in2, new_shape=shape))\n\n\nsim = Simulator(ExampleVector2Tensor())\nsim.run()\n\nprint('in2', sim['in2'].shape)\nprint(sim['in2'])\nprint('reshape_vector2tensor', sim['reshape_vector2tensor'].shape)\nprint(sim['reshape_vector2tensor'])\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-in2",metastring:"(120,)","(120,)":!0},"[  0.   1.   2.   3.   4.   5.   6.   7.   8.   9.  10.  11.  12.  13.\n  14.  15.  16.  17.  18.  19.  20.  21.  22.  23.  24.  25.  26.  27.\n  28.  29.  30.  31.  32.  33.  34.  35.  36.  37.  38.  39.  40.  41.\n  42.  43.  44.  45.  46.  47.  48.  49.  50.  51.  52.  53.  54.  55.\n  56.  57.  58.  59.  60.  61.  62.  63.  64.  65.  66.  67.  68.  69.\n  70.  71.  72.  73.  74.  75.  76.  77.  78.  79.  80.  81.  82.  83.\n  84.  85.  86.  87.  88.  89.  90.  91.  92.  93.  94.  95.  96.  97.\n  98.  99. 100. 101. 102. 103. 104. 105. 106. 107. 108. 109. 110. 111.\n 112. 113. 114. 115. 116. 117. 118. 119.]\nreshape_vector2tensor (2, 3, 4, 5)\n[[[[  0.   1.   2.   3.   4.]\n   [  5.   6.   7.   8.   9.]\n   [ 10.  11.  12.  13.  14.]\n   [ 15.  16.  17.  18.  19.]]\n\n  [[ 20.  21.  22.  23.  24.]\n   [ 25.  26.  27.  28.  29.]\n   [ 30.  31.  32.  33.  34.]\n   [ 35.  36.  37.  38.  39.]]\n\n  [[ 40.  41.  42.  43.  44.]\n   [ 45.  46.  47.  48.  49.]\n   [ 50.  51.  52.  53.  54.]\n   [ 55.  56.  57.  58.  59.]]]\n\n\n [[[ 60.  61.  62.  63.  64.]\n   [ 65.  66.  67.  68.  69.]\n   [ 70.  71.  72.  73.  74.]\n   [ 75.  76.  77.  78.  79.]]\n\n  [[ 80.  81.  82.  83.  84.]\n   [ 85.  86.  87.  88.  89.]\n   [ 90.  91.  92.  93.  94.]\n   [ 95.  96.  97.  98.  99.]]\n\n  [[100. 101. 102. 103. 104.]\n   [105. 106. 107. 108. 109.]\n   [110. 111. 112. 113. 114.]\n   [115. 116. 117. 118. 119.]]]]\n")))}m.isMDXComponent=!0}}]);