"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1667],{3905:function(e,n,t){t.d(n,{Zo:function(){return s},kt:function(){return d}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var m=r.createContext({}),p=function(e){var n=r.useContext(m),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},s=function(e){var n=p(e.components);return r.createElement(m.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},c=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,m=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),c=p(t),d=a,_=c["".concat(m,".").concat(d)]||c[d]||u[d]||o;return t?r.createElement(_,l(l({ref:n},s),{},{components:t})):r.createElement(_,l({ref:n},s))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,l=new Array(o);l[0]=c;var i={};for(var m in n)hasOwnProperty.call(n,m)&&(i[m]=n[m]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var p=2;p<o;p++)l[p]=t[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}c.displayName="MDXCreateElement"},4944:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return i},contentTitle:function(){return m},metadata:function(){return p},toc:function(){return s},default:function(){return c}});var r=t(7462),a=t(3366),o=(t(7294),t(3905)),l=["components"],i={},m=void 0,p={unversionedId:"worked_examples/ex_sum_multiple_matrix_along0_random",id:"worked_examples/ex_sum_multiple_matrix_along0_random",isDocsHomePage:!1,title:"ex_sum_multiple_matrix_along0_random",description:"`py",source:"@site/docs/worked_examples/ex_sum_multiple_matrix_along0_random.mdx",sourceDirName:"worked_examples",slug:"/worked_examples/ex_sum_multiple_matrix_along0_random",permalink:"/csdl/docs/worked_examples/ex_sum_multiple_matrix_along0_random",editUrl:"https://github.com/lsdolab/csdl/edit/main/website/docs/worked_examples/ex_sum_multiple_matrix_along0_random.mdx",tags:[],version:"current",frontMatter:{}},s=[],u={toc:s};function c(e){var n=e.components,t=(0,a.Z)(e,l);return(0,o.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-py"},"from csdl_om import Simulator\nfrom csdl import Model\nimport csdl\nimport numpy as np\n\n\nclass ExampleMultipleMatrixAlong0Random(Model):\n\n    def define(self):\n        n = 3\n        m = 6\n        np.random.seed(0)\n\n        # Declare a matrix of shape 3x6 as input\n        M1 = self.declare_variable('M1',\n                                   val=np.random.rand(n * m).reshape(\n                                       (n, m)))\n\n        # Declare another matrix of shape 3x6 as input\n        M2 = self.declare_variable('M2',\n                                   val=np.random.rand(n * m).reshape(\n                                       (n, m)))\n\n        # Output the elementwise sum of the axiswise sum of matrices M1 ad M2 along the columns\n        self.register_output('multiple_matrix_sum_along_0',\n                             csdl.sum(M1, M2, axes=(0, )))\n\n\nsim = Simulator(ExampleMultipleMatrixAlong0Random())\nsim.run()\n\nprint('M1', sim['M1'].shape)\nprint(sim['M1'])\nprint('M2', sim['M2'].shape)\nprint(sim['M2'])\nprint('multiple_matrix_sum_along_0',\n      sim['multiple_matrix_sum_along_0'].shape)\nprint(sim['multiple_matrix_sum_along_0'])\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-M1",metastring:"(3, 6)","(3,":!0,"6)":!0},"[[0.5488135  0.71518937 0.60276338 0.54488318 0.4236548  0.64589411]\n [0.43758721 0.891773   0.96366276 0.38344152 0.79172504 0.52889492]\n [0.56804456 0.92559664 0.07103606 0.0871293  0.0202184  0.83261985]]\nM2 (3, 6)\n[[0.77815675 0.87001215 0.97861834 0.79915856 0.46147936 0.78052918]\n [0.11827443 0.63992102 0.14335329 0.94466892 0.52184832 0.41466194]\n [0.26455561 0.77423369 0.45615033 0.56843395 0.0187898  0.6176355 ]]\nmultiple_matrix_sum_along_0 (6,)\n[2.71543207 4.81672586 3.21558416 3.32771543 2.23771572 3.82023549]\n")))}c.isMDXComponent=!0}}]);