"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8199],{3905:function(e,r,n){n.d(r,{Zo:function(){return p},kt:function(){return d}});var t=n(7294);function o(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function i(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function l(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?i(Object(n),!0).forEach((function(r){o(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function a(e,r){if(null==e)return{};var n,t,o=function(e,r){if(null==e)return{};var n,t,o={},i=Object.keys(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||(o[n]=e[n]);return o}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=t.createContext({}),s=function(e){var r=t.useContext(c),n=r;return e&&(n="function"==typeof e?e(r):l(l({},r),e)),n},p=function(e){var r=s(e.components);return t.createElement(c.Provider,{value:r},e.children)},u={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},m=t.forwardRef((function(e,r){var n=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),m=s(n),d=o,f=m["".concat(c,".").concat(d)]||m[d]||u[d]||i;return n?t.createElement(f,l(l({ref:r},p),{},{components:n})):t.createElement(f,l({ref:r},p))}));function d(e,r){var n=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var i=n.length,l=new Array(i);l[0]=m;var a={};for(var c in r)hasOwnProperty.call(r,c)&&(a[c]=r[c]);a.originalType=e,a.mdxType="string"==typeof e?e:o,l[1]=a;for(var s=2;s<i;s++)l[s]=n[s];return t.createElement.apply(null,l)}return t.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6251:function(e,r,n){n.r(r),n.d(r,{frontMatter:function(){return a},contentTitle:function(){return c},metadata:function(){return s},toc:function(){return p},default:function(){return m}});var t=n(7462),o=n(3366),i=(n(7294),n(3905)),l=["components"],a={},c=void 0,s={unversionedId:"worked_examples/ex_implicit_composite_residual",id:"worked_examples/ex_implicit_composite_residual",isDocsHomePage:!1,title:"ex_implicit_composite_residual",description:"`py",source:"@site/docs/worked_examples/ex_implicit_composite_residual.mdx",sourceDirName:"worked_examples",slug:"/worked_examples/ex_implicit_composite_residual",permalink:"/csdl/docs/worked_examples/ex_implicit_composite_residual",editUrl:"https://github.com/lsdolab/csdl/edit/main/website/docs/worked_examples/ex_implicit_composite_residual.mdx",tags:[],version:"current",frontMatter:{}},p=[],u={toc:p};function m(e){var r=e.components,n=(0,o.Z)(e,l);return(0,i.kt)("wrapper",(0,t.Z)({},u,n,{components:r,mdxType:"MDXLayout"}),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-py"},"from csdl_om import Simulator\nfrom csdl import Model, ImplicitModel, ScipyKrylov, NewtonSolver, NonlinearBlockGS\nimport numpy as np\n\n\nclass ExampleCompositeResidual(ImplicitModel):\n    def define(self):\n        r = self.declare_variable('r', val=2)\n        a = self.declare_variable('a', val=1)\n        b = self.declare_variable('b', val=-3)\n        c = self.declare_variable('c', val=2)\n        x = self.create_implicit_output('x', val=1.5)\n        y = self.create_implicit_output('y', val=0.9)\n\n        x.define_residual(x**2 + (y - r)**2 - r**2)\n        y.define_residual(a * y**2 + b * y + c)\n        self.linear_solver = ScipyKrylov()\n        self.nonlinear_solver = NewtonSolver(solve_subsystems=False)\n\n\nsim = Simulator(ExampleCompositeResidual())\nsim.run()\n\nprint('x', sim['x'].shape)\nprint(sim['x'])\nprint('y', sim['y'].shape)\nprint(sim['y'])\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"=====\nmodel\n=====\nNL: Newton Converged in 4 iterations\nx (1,)\n[1.73205081]\ny (1,)\n[1.]\n")))}m.isMDXComponent=!0}}]);