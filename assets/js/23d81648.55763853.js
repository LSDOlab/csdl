"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2438],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return m}});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=r.createContext({}),c=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},p=function(e){var n=c(e.components);return r.createElement(s.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(t),m=i,f=u["".concat(s,".").concat(m)]||u[m]||d[m]||o;return t?r.createElement(f,a(a({ref:n},p),{},{components:t})):r.createElement(f,a({ref:n},p))}));function m(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,a=new Array(o);a[0]=u;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var c=2;c<o;c++)a[c]=t[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},9132:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return p},default:function(){return u}});var r=t(7462),i=t(3366),o=(t(7294),t(3905)),a=["components"],l={title:"Compiler Back End Options"},s=void 0,c={unversionedId:"backends",id:"backends",isDocsHomePage:!1,title:"Compiler Back End Options",description:"------------------------------------------------------------------------",source:"@site/docs/backends.mdx",sourceDirName:".",slug:"/backends",permalink:"/csdl/docs/backends",editUrl:"https://github.com/lsdolab/csdl/edit/main/website/docs/backends.mdx",tags:[],version:"current",frontMatter:{title:"Compiler Back End Options"},sidebar:"docs",previous:{title:"Trigonometric Functions",permalink:"/csdl/docs/std_lib_ref/trigonometric_functions"},next:{title:"Compiler Middle End Design",permalink:"/csdl/docs/optimizations"}},p=[{value:"List of Available Back Ends",id:"list-of-available-back-ends",children:[]}],d={toc:p};function u(e){var n=e.components,t=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("hr",null),(0,o.kt)("p",null,"In order to run a simulation defined using CSDL, two packages are\nrequired.\nThe first package is ",(0,o.kt)("inlineCode",{parentName:"p"},"csdl"),".\nThe second package comes from the list at the end of this page."),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"csdl")," package provides the front end and middle end for the CSDL\ncompiler.\nThe front end is responsible for building an intermediate representation\nof the user-defined model, while the middle end is responsible for\nperforming implementation-independent analyses and optimizations on the\nintermediate representation.\nThe ",(0,o.kt)("inlineCode",{parentName:"p"},"csdl")," package provides users with a way to ",(0,o.kt)("em",{parentName:"p"},"specify mathematical\nmodels")," of physical systems, but ",(0,o.kt)("em",{parentName:"p"},"no way to implement simulations")," to\nsimulate the behavior of such systems."),(0,o.kt)("h2",{id:"list-of-available-back-ends"},"List of Available Back Ends"),(0,o.kt)("p",null,"In order to generate simulation implementation, a CSDL compiler\nback end is required.\nThe CSDL compiler back end is provided by a separate Python package of\nyour choosing.\nThe links below provide detailed guides for using and designing a CSDL\ncompiler back end."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/lsdolab/csdl_om"},"csdl_om"),", which compiles CSDL\ncode to an ",(0,o.kt)("a",{parentName:"li",href:"https://openmdao.org"},"OpenMDAO")," problem.\nNo additional knowledge of the OpenMDAO API is required.\nAll worked examples in this documentation are built using ",(0,o.kt)("inlineCode",{parentName:"li"},"csdl_om"))))}u.isMDXComponent=!0}}]);