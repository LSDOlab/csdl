"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7924,1821],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return d}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var m=r.createContext({}),s=function(e){var t=r.useContext(m),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(m.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,m=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=s(n),d=a,_=c["".concat(m,".").concat(d)]||c[d]||p[d]||i;return n?r.createElement(_,o(o({ref:t},u),{},{components:n})):r.createElement(_,o({ref:t},u))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=c;var l={};for(var m in t)hasOwnProperty.call(t,m)&&(l[m]=t[m]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},3809:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return m},contentTitle:function(){return s},metadata:function(){return u},toc:function(){return p},default:function(){return d}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),o=n(2784),l=["components"],m={},s="Sum of Multiple Matrices along Rows",u={unversionedId:"examples/Standard Library/sum/ex_sum_multiple_matrix_along1",id:"examples/Standard Library/sum/ex_sum_multiple_matrix_along1",isDocsHomePage:!1,title:"Sum of Multiple Matrices along Rows",description:"This is an example of computing the elementwise sum of the axiswise sum",source:"@site/docs/examples/Standard Library/sum/ex_sum_multiple_matrix_along1.mdx",sourceDirName:"examples/Standard Library/sum",slug:"/examples/Standard Library/sum/ex_sum_multiple_matrix_along1",permalink:"/csdl/docs/examples/Standard Library/sum/ex_sum_multiple_matrix_along1",editUrl:"https://github.com/lsdolab/csdl/edit/main/website/docs/examples/Standard Library/sum/ex_sum_multiple_matrix_along1.mdx",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Sum of Multiple Matrices along Columns",permalink:"/csdl/docs/examples/Standard Library/sum/ex_sum_multiple_matrix_along0"},next:{title:"Sum of Multiple Tensors",permalink:"/csdl/docs/examples/Standard Library/sum/ex_sum_multiple_tensor"}},p=[],c={toc:p};function d(e){var t=e.components,n=(0,a.Z)(e,l);return(0,i.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"sum-of-multiple-matrices-along-rows"},"Sum of Multiple Matrices along Rows"),(0,i.kt)("p",null,"This is an example of computing the elementwise sum of the axiswise sum\nof matrices M1 ad M2 along the rows."),(0,i.kt)(o.default,{mdxType:"WorkedExample"}))}d.isMDXComponent=!0},2784:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return m},metadata:function(){return s},toc:function(){return u},default:function(){return c}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),o=["components"],l={},m=void 0,s={unversionedId:"worked_examples/ex_sum_multiple_matrix_along1",id:"worked_examples/ex_sum_multiple_matrix_along1",isDocsHomePage:!1,title:"ex_sum_multiple_matrix_along1",description:"`py",source:"@site/docs/worked_examples/ex_sum_multiple_matrix_along1.mdx",sourceDirName:"worked_examples",slug:"/worked_examples/ex_sum_multiple_matrix_along1",permalink:"/csdl/docs/worked_examples/ex_sum_multiple_matrix_along1",editUrl:"https://github.com/lsdolab/csdl/edit/main/website/docs/worked_examples/ex_sum_multiple_matrix_along1.mdx",tags:[],version:"current",frontMatter:{}},u=[],p={toc:u};function c(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-py"},"from csdl_om import Simulator\nfrom csdl import Model\nimport csdl\nimport numpy as np\n\n\nclass ExampleMultipleMatrixAlong1(Model):\n    def define(self):\n        n = 3\n        m = 6\n\n        # Declare a matrix of shape 3x6 as input\n        M1 = self.declare_variable('M1',\n                                   val=np.arange(n * m).reshape((n, m)))\n\n        # Declare another matrix of shape 3x6 as input\n        M2 = self.declare_variable('M2',\n                                   val=np.arange(n * m,\n                                                 2 * n * m).reshape(\n                                                     (n, m)))\n\n        # Output the elementwise sum of the axiswise sum of matrices M1 ad M2 along the columns\n        self.register_output('multiple_matrix_sum_along_1',\n                             csdl.sum(M1, M2, axes=(1, )))\n\n\nsim = Simulator(ExampleMultipleMatrixAlong1())\nsim.run()\n\nprint('M1', sim['M1'].shape)\nprint(sim['M1'])\nprint('M2', sim['M2'].shape)\nprint(sim['M2'])\nprint('multiple_matrix_sum_along_1',\n      sim['multiple_matrix_sum_along_1'].shape)\nprint(sim['multiple_matrix_sum_along_1'])\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-M1",metastring:"(3, 6)","(3,":!0,"6)":!0},"[[ 0.  1.  2.  3.  4.  5.]\n [ 6.  7.  8.  9. 10. 11.]\n [12. 13. 14. 15. 16. 17.]]\nM2 (3, 6)\n[[18. 19. 20. 21. 22. 23.]\n [24. 25. 26. 27. 28. 29.]\n [30. 31. 32. 33. 34. 35.]]\nmultiple_matrix_sum_along_1 (3,)\n[138. 210. 282.]\n")))}c.isMDXComponent=!0}}]);