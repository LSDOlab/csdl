"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1821],{3905:function(e,n,t){t.d(n,{Zo:function(){return s},kt:function(){return f}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var m=r.createContext({}),p=function(e){var n=r.useContext(m),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},s=function(e){var n=p(e.components);return r.createElement(m.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},c=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,m=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),c=p(t),f=a,_=c["".concat(m,".").concat(f)]||c[f]||u[f]||o;return t?r.createElement(_,l(l({ref:n},s),{},{components:t})):r.createElement(_,l({ref:n},s))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,l=new Array(o);l[0]=c;var i={};for(var m in n)hasOwnProperty.call(n,m)&&(i[m]=n[m]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var p=2;p<o;p++)l[p]=t[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}c.displayName="MDXCreateElement"},2784:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return i},contentTitle:function(){return m},metadata:function(){return p},toc:function(){return s},default:function(){return c}});var r=t(7462),a=t(3366),o=(t(7294),t(3905)),l=["components"],i={},m=void 0,p={unversionedId:"worked_examples/ex_sum_multiple_matrix_along1",id:"worked_examples/ex_sum_multiple_matrix_along1",isDocsHomePage:!1,title:"ex_sum_multiple_matrix_along1",description:"`py",source:"@site/docs/worked_examples/ex_sum_multiple_matrix_along1.mdx",sourceDirName:"worked_examples",slug:"/worked_examples/ex_sum_multiple_matrix_along1",permalink:"/csdl/docs/worked_examples/ex_sum_multiple_matrix_along1",editUrl:"https://github.com/lsdolab/csdl/edit/main/website/docs/worked_examples/ex_sum_multiple_matrix_along1.mdx",tags:[],version:"current",frontMatter:{}},s=[],u={toc:s};function c(e){var n=e.components,t=(0,a.Z)(e,l);return(0,o.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-py"},"from csdl_om import Simulator\nfrom csdl import Model\nimport csdl\nimport numpy as np\n\n\nclass ExampleMultipleMatrixAlong1(Model):\n\n    def define(self):\n        n = 3\n        m = 6\n\n        # Declare a matrix of shape 3x6 as input\n        M1 = self.declare_variable('M1',\n                                   val=np.arange(n * m).reshape((n, m)))\n\n        # Declare another matrix of shape 3x6 as input\n        M2 = self.declare_variable('M2',\n                                   val=np.arange(n * m,\n                                                 2 * n * m).reshape(\n                                                     (n, m)))\n\n        # Output the elementwise sum of the axiswise sum of matrices M1 ad M2 along the columns\n        self.register_output('multiple_matrix_sum_along_1',\n                             csdl.sum(M1, M2, axes=(1, )))\n\n\nsim = Simulator(ExampleMultipleMatrixAlong1())\nsim.run()\n\nprint('M1', sim['M1'].shape)\nprint(sim['M1'])\nprint('M2', sim['M2'].shape)\nprint(sim['M2'])\nprint('multiple_matrix_sum_along_1',\n      sim['multiple_matrix_sum_along_1'].shape)\nprint(sim['multiple_matrix_sum_along_1'])\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-M1",metastring:"(3, 6)","(3,":!0,"6)":!0},"[[ 0.  1.  2.  3.  4.  5.]\n [ 6.  7.  8.  9. 10. 11.]\n [12. 13. 14. 15. 16. 17.]]\nM2 (3, 6)\n[[18. 19. 20. 21. 22. 23.]\n [24. 25. 26. 27. 28. 29.]\n [30. 31. 32. 33. 34. 35.]]\nmultiple_matrix_sum_along_1 (3,)\n[138. 210. 282.]\n")))}c.isMDXComponent=!0}}]);