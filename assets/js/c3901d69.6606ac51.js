"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6348,9078,4664,3168],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return u}});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=r.createContext({}),p=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},c=function(e){var n=p(e.components);return r.createElement(s.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=p(t),u=i,x=d["".concat(s,".").concat(u)]||d[u]||m[u]||a;return t?r.createElement(x,l(l({ref:n},c),{},{components:t})):r.createElement(x,l({ref:n},c))}));function u(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,l=new Array(a);l[0]=d;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var p=2;p<a;p++)l[p]=t[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},1071:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return c},contentTitle:function(){return m},metadata:function(){return d},toc:function(){return u},default:function(){return f}});var r=t(7462),i=t(3366),a=(t(7294),t(3905)),l=t(9557),o=t(5158),s=t(5627),p=["components"],c={},m="Implicit Relationships",d={unversionedId:"examples/Basic Examples/implicit_relationships",id:"examples/Basic Examples/implicit_relationships",isDocsHomePage:!1,title:"Implicit Relationships",description:"The `ImplicitModel` class provides users with a way to solve for",source:"@site/docs/examples/Basic Examples/implicit_relationships.mdx",sourceDirName:"examples/Basic Examples",slug:"/examples/Basic Examples/implicit_relationships",permalink:"/csdl/docs/examples/Basic Examples/implicit_relationships",editUrl:"https://github.com/lsdolab/csdl/edit/main/website/docs/examples/Basic Examples/implicit_relationships.mdx",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Failing to Register Outputs Results in No Components",permalink:"/csdl/docs/examples/Basic Examples/ignored_outputs"},next:{title:"Array Indexing",permalink:"/csdl/docs/examples/Basic Examples/indexing"}},u=[],x={toc:u};function f(e){var n=e.components,t=(0,i.Z)(e,p);return(0,a.kt)("wrapper",(0,r.Z)({},x,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"implicit-relationships"},"Implicit Relationships"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"ImplicitModel")," class provides users with a way to solve for\nvariables in implicit relationships.\nIt is possible to compute outputs implicitly by defining a residual\nvariable in terms of the output and inputs."),(0,a.kt)("p",null,"In the first example, we solve a quadratic equation.\nThis quadratic has two solutions: ",(0,a.kt)("inlineCode",{parentName:"p"},"1")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"3"),".\nDepending on the starting value of the output variable, CSDL will\nfind one root or the other.\nThe second and third examples show how to perform a bracketed search."),(0,a.kt)(l.default,{mdxType:"WorkedExample1"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py"},"from csdl.examples.valid.ex_implicit_apply_nonlinear import example\nfrom csdl_om import Simulator\nsim = example(Simulator)\n\nprint('using default x=1')\nsim.run()\nprint('x', sim['x'].shape)\nprint(sim['x'])\n\nprint('')\nprint('')\nprint('setting x=1.9')\nsim['x'] = 1.9\nsim.run()\nprint('x', sim['x'].shape)\nprint(sim['x'])\n\nprint('')\nprint('')\nprint('setting x=2.1')\nsim['x'] = 2.1\nsim.run()\nprint('x', sim['x'].shape)\nprint(sim['x'])\n")),(0,a.kt)("p",null,"The expressions for the residuals will will be part of a ",(0,a.kt)("inlineCode",{parentName:"p"},"Model"),"\nwithin the generated ",(0,a.kt)("inlineCode",{parentName:"p"},"ImplicitModel")," object."),(0,a.kt)("p",null,"For problems where the residual may converge for multiple solutions, or\nwhere the residual is difficult to converge over some interval, ",(0,a.kt)("inlineCode",{parentName:"p"},"csdl"),"\nprovides an API for bracketing solutions."),(0,a.kt)(o.default,{mdxType:"WorkedExample2"}),(0,a.kt)("p",null,"Brackets may also be specified for multidimensional array values."),(0,a.kt)(s.default,{mdxType:"WorkedExample3"}))}f.isMDXComponent=!0},9557:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return o},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return c},default:function(){return d}});var r=t(7462),i=t(3366),a=(t(7294),t(3905)),l=["components"],o={},s=void 0,p={unversionedId:"worked_examples/ex_implicit_apply_nonlinear",id:"worked_examples/ex_implicit_apply_nonlinear",isDocsHomePage:!1,title:"ex_implicit_apply_nonlinear",description:"`py",source:"@site/docs/worked_examples/ex_implicit_apply_nonlinear.mdx",sourceDirName:"worked_examples",slug:"/worked_examples/ex_implicit_apply_nonlinear",permalink:"/csdl/docs/worked_examples/ex_implicit_apply_nonlinear",editUrl:"https://github.com/lsdolab/csdl/edit/main/website/docs/worked_examples/ex_implicit_apply_nonlinear.mdx",tags:[],version:"current",frontMatter:{}},c=[],m={toc:c};function d(e){var n=e.components,t=(0,i.Z)(e,l);return(0,a.kt)("wrapper",(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py"},"from csdl_om import Simulator\nfrom csdl import Model, ImplicitModel, ScipyKrylov, NewtonSolver, NonlinearBlockGS\nimport numpy as np\n\n\nclass ExampleApplyNonlinear(ImplicitModel):\n    def define(self):\n        with self.create_model('sys') as model:\n            model.create_input('a', val=1)\n            model.create_input('b', val=-4)\n            model.create_input('c', val=3)\n        a = self.declare_variable('a')\n        b = self.declare_variable('b')\n        c = self.declare_variable('c')\n\n        x = self.create_implicit_output('x')\n        y = a * x**2 + b * x + c\n\n        x.define_residual(y)\n        self.linear_solver = ScipyKrylov()\n        self.nonlinear_solver = NewtonSolver(solve_subsystems=False)\n\n\nsim = Simulator(ExampleApplyNonlinear())\nsim.run()\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"=====\nmodel\n=====\nNL: Newton Converged in 0 iterations\n")))}d.isMDXComponent=!0},5627:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return o},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return c},default:function(){return d}});var r=t(7462),i=t(3366),a=(t(7294),t(3905)),l=["components"],o={},s=void 0,p={unversionedId:"worked_examples/ex_implicit_bracketed_array",id:"worked_examples/ex_implicit_bracketed_array",isDocsHomePage:!1,title:"ex_implicit_bracketed_array",description:"`py",source:"@site/docs/worked_examples/ex_implicit_bracketed_array.mdx",sourceDirName:"worked_examples",slug:"/worked_examples/ex_implicit_bracketed_array",permalink:"/csdl/docs/worked_examples/ex_implicit_bracketed_array",editUrl:"https://github.com/lsdolab/csdl/edit/main/website/docs/worked_examples/ex_implicit_bracketed_array.mdx",tags:[],version:"current",frontMatter:{}},c=[],m={toc:c};function d(e){var n=e.components,t=(0,i.Z)(e,l);return(0,a.kt)("wrapper",(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py"},"from csdl_om import Simulator\nfrom csdl import Model, ImplicitModel, ScipyKrylov, NewtonSolver, NonlinearBlockGS\nimport numpy as np\n\n\nclass ExampleBracketedArray(ImplicitModel):\n    def define(self):\n        with self.create_model('sys') as model:\n            model.create_input('a', val=[1, -1])\n            model.create_input('b', val=[-4, 4])\n            model.create_input('c', val=[3, -3])\n        a = self.declare_variable('a', shape=(2, ))\n        b = self.declare_variable('b', shape=(2, ))\n        c = self.declare_variable('c', shape=(2, ))\n\n        x = self.create_implicit_output('x', shape=(2, ))\n        y = a * x**2 + b * x + c\n\n        x.define_residual_bracketed(\n            y,\n            x1=[0, 2.],\n            x2=[2, np.pi],\n        )\n\n\nsim = Simulator(ExampleBracketedArray())\nsim.run()\n\nprint('x', sim['x'].shape)\nprint(sim['x'])\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-x",metastring:"(2,)","(2,)":!0},"[1. 3.]\n")))}d.isMDXComponent=!0},5158:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return o},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return c},default:function(){return d}});var r=t(7462),i=t(3366),a=(t(7294),t(3905)),l=["components"],o={},s=void 0,p={unversionedId:"worked_examples/ex_implicit_bracketed_scalar",id:"worked_examples/ex_implicit_bracketed_scalar",isDocsHomePage:!1,title:"ex_implicit_bracketed_scalar",description:"`py",source:"@site/docs/worked_examples/ex_implicit_bracketed_scalar.mdx",sourceDirName:"worked_examples",slug:"/worked_examples/ex_implicit_bracketed_scalar",permalink:"/csdl/docs/worked_examples/ex_implicit_bracketed_scalar",editUrl:"https://github.com/lsdolab/csdl/edit/main/website/docs/worked_examples/ex_implicit_bracketed_scalar.mdx",tags:[],version:"current",frontMatter:{}},c=[],m={toc:c};function d(e){var n=e.components,t=(0,i.Z)(e,l);return(0,a.kt)("wrapper",(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py"},"from csdl_om import Simulator\nfrom csdl import Model, ImplicitModel, ScipyKrylov, NewtonSolver, NonlinearBlockGS\nimport numpy as np\n\n\nclass ExampleBracketedScalar(ImplicitModel):\n    def define(self):\n        with self.create_model('sys') as model:\n            model.create_input('a', val=1)\n            model.create_input('b', val=-4)\n            model.create_input('c', val=3)\n        a = self.declare_variable('a')\n        b = self.declare_variable('b')\n        c = self.declare_variable('c')\n\n        x = self.create_implicit_output('x')\n        y = a * x**2 + b * x + c\n\n        x.define_residual_bracketed(\n            y,\n            x1=0,\n            x2=2,\n        )\n\n\nsim = Simulator(ExampleBracketedScalar())\nsim.run()\n\nprint('x', sim['x'].shape)\nprint(sim['x'])\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-x",metastring:"(1,)","(1,)":!0},"[1.]\n")))}d.isMDXComponent=!0}}]);