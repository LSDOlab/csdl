"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1355],{3905:function(e,n,r){r.d(n,{Zo:function(){return l},kt:function(){return d}});var t=r(7294);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function i(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function a(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?i(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function s(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},i=Object.keys(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=t.createContext({}),p=function(e){var n=t.useContext(c),r=n;return e&&(r="function"==typeof e?e(n):a(a({},n),e)),r},l=function(e){var n=p(e.components);return t.createElement(c.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},m=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),m=p(r),d=o,f=m["".concat(c,".").concat(d)]||m[d]||u[d]||i;return r?t.createElement(f,a(a({ref:n},l),{},{components:r})):t.createElement(f,a({ref:n},l))}));function d(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=m;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var p=2;p<i;p++)a[p]=r[p];return t.createElement.apply(null,a)}return t.createElement.apply(null,r)}m.displayName="MDXCreateElement"},8979:function(e,n,r){r.r(n),r.d(n,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return p},toc:function(){return l},default:function(){return m}});var t=r(7462),o=r(3366),i=(r(7294),r(3905)),a=["components"],s={},c=void 0,p={unversionedId:"worked_examples/ex_combine_simple",id:"worked_examples/ex_combine_simple",isDocsHomePage:!1,title:"ex_combine_simple",description:"`py",source:"@site/docs/worked_examples/ex_combine_simple.mdx",sourceDirName:"worked_examples",slug:"/worked_examples/ex_combine_simple",permalink:"/csdl/docs/worked_examples/ex_combine_simple",editUrl:"https://github.com/lsdolab/csdl/edit/main/website/docs/worked_examples/ex_combine_simple.mdx",tags:[],version:"current",frontMatter:{}},l=[],u={toc:l};function m(e){var n=e.components,r=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,t.Z)({},u,r,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-py"},"from csdl_om import Simulator\nfrom csdl import Model\nimport csdl\nimport numpy as np\n\n\nclass ExampleSimple(Model):\n    def define(self):\n\n        # add_input\n        nx = 3\n        ny = 4\n        mesh = np.zeros((nx, ny, 3))\n\n        mesh[:, :, 0] = np.outer(np.arange(nx), np.ones(ny))\n        mesh[:, :, 1] = np.outer(np.arange(ny), np.ones(nx)).T\n        mesh[:, :, 2] = 0.\n        def_mesh = self.declare_variable('def_mesh', val=mesh)\n\n        # compute_output\n        quarter_chord = def_mesh[nx - 1, :, :] * 0.25 + def_mesh[\n            0, :, :] * 0.75\n        b_pts = def_mesh[:-1, :, :] * .75 + def_mesh[1:, :, :] * .25\n        self.register_output('quarter_chord', quarter_chord)\n        self.register_output('b_pts', b_pts)\n\n        quarter_chord = self.declare_variable(\n            'quarter_chord',\n            val=np.ones((1, 4, 3)),\n        )\n        e = quarter_chord[:, :nx, :]\n        f = quarter_chord[:, 1:, :]\n\n        # this will combine operations\n        widths = csdl.pnorm(f - e)\n        self.register_output('widths', widths)\n\n\nsim = Simulator(ExampleSimple())\nsim.run()\n\nprint('quarter_chord', sim['quarter_chord'].shape)\nprint(sim['quarter_chord'])\nprint('widths', sim['widths'].shape)\nprint(sim['widths'])\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-quarter_chord",metastring:"(1, 4, 3)","(1,":!0,"4,":!0,"3)":!0},"[[[0.5 0.  0. ]\n  [0.5 1.  0. ]\n  [0.5 2.  0. ]\n  [0.5 3.  0. ]]]\nwidths (1,)\n[1.73205081]\n")))}m.isMDXComponent=!0}}]);