"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3650],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return u}});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),m=p(n),u=i,h=m["".concat(l,".").concat(u)]||m[u]||c[u]||r;return n?a.createElement(h,o(o({ref:t},d),{},{components:n})):a.createElement(h,o({ref:t},d))}));function u(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var p=2;p<r;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4463:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return p},toc:function(){return d},default:function(){return m}});var a=n(7462),i=n(3366),r=(n(7294),n(3905)),o=["components"],s={title:"Adding Examples for Testing and Documentation",sidebar_position:2},l=void 0,p={unversionedId:"developer/contributing/examples",id:"developer/contributing/examples",isDocsHomePage:!1,title:"Adding Examples for Testing and Documentation",description:"------------------------------------------------------------------------",source:"@site/docs/developer/contributing/examples.mdx",sourceDirName:"developer/contributing",slug:"/developer/contributing/examples",permalink:"/csdl/docs/developer/contributing/examples",editUrl:"https://github.com/lsdolab/csdl/edit/main/website/docs/developer/contributing/examples.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Adding Examples for Testing and Documentation",sidebar_position:2},sidebar:"docs",previous:{title:"Reporting an Issue",permalink:"/csdl/docs/developer/contributing/issues"},next:{title:"Adding Standard Library Operations",permalink:"/csdl/docs/developer/contributing/std_lib"}},d=[{value:"Introduction",id:"introduction",children:[]},{value:"Defining Examples with Valid Input",id:"defining-examples-with-valid-input",children:[]},{value:"Generating Example Functions for Testing",id:"generating-example-functions-for-testing",children:[{value:"Defining a Test Using an Example",id:"defining-a-test-using-an-example",children:[]}]},{value:"Generating Worked Example Scripts for Documentation",id:"generating-worked-example-scripts-for-documentation",children:[]},{value:"Adding Worked Examples to Documentation",id:"adding-worked-examples-to-documentation",children:[]}],c={toc:d};function m(e){var t=e.components,n=(0,i.Z)(e,o);return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"introduction"},"Introduction"),(0,r.kt)("p",null,"To define examples used for testing and documentation, only the example\nclass defnition is required.\nExample class definitions are located in ",(0,r.kt)("inlineCode",{parentName:"p"},"csdl/csdl/examples"),".\n",(0,r.kt)("inlineCode",{parentName:"p"},"csdl/examples/")," contains class definitions that are used to generate\nexample functions for running tests and including in documentation.\nClass names must start with either ",(0,r.kt)("inlineCode",{parentName:"p"},"Example")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"Error"),".\nClass names that start with ",(0,r.kt)("inlineCode",{parentName:"p"},"Example")," are meant to be used for testing\nexpected values when valid inputs are provided, and class names that\nstart with ",(0,r.kt)("inlineCode",{parentName:"p"},"Error")," are meant to be used for testing expected errors when\ninvalid inputs are provided.\nThese prefixes are used for generating example functions and scripts for\ntesting and documentation, respectively."),(0,r.kt)("p",null,"The same example class definition can be used in both tests and\ndocumentation."),(0,r.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"It is not required that all examples be used in tests, or that all\nexamples used for testing be used for documentation."))),(0,r.kt)("h2",{id:"defining-examples-with-valid-input"},"Defining Examples with Valid Input"),(0,r.kt)("p",null,"Since example functions and scripts are generated from class\ndefinitions, there isn't any way by default to signal directly from\nwithin the class definition that the example script should print a\nvariable value in the worked example.\nTo make this possible, ",(0,r.kt)("inlineCode",{parentName:"p"},"csdl")," uses the ",(0,r.kt)("inlineCode",{parentName:"p"},"docstring_parser")," package to\nparse docstrings before generating example scripts."),(0,r.kt)("p",null,"To write an example that prints the value of an output so that\nTo get values from a simulation in a test (e.g. ",(0,r.kt)("inlineCode",{parentName:"p"},"'x'")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"'y'"),"),\nadd"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-py"},'"""\n:param var: x\n:param var: y\n"""\n')),(0,r.kt)("p",null,"to the top of the class definition for a class whose name begins with\n",(0,r.kt)("inlineCode",{parentName:"p"},"Example")," (this will not work for example classes whose names begin with\n",(0,r.kt)("inlineCode",{parentName:"p"},"Error"),").\nThis will add the following to the end of the example function/script:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-py"},"sim = Simulator(ExampleName())\nsim.run()\n\nprint('x', sim['x'].shape)\nprint(sim['x'])\nprint('y', sim['y'].shape)\nprint(sim['y'])\n")),(0,r.kt)("p",null,"The next section covers how to generate example functions for use in\n",(0,r.kt)("inlineCode",{parentName:"p"},"pytest"),".\nLater, we'll cover how to generate worked example scripts from these\nfunctions to include in the documentation."),(0,r.kt)("h2",{id:"generating-example-functions-for-testing"},"Generating Example Functions for Testing"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"csdl")," provides a script for generating function definitions that can be\nused in integration tests, ",(0,r.kt)("inlineCode",{parentName:"p"},"csdl/utils/generate_example_scripts.py"),",\nwhich outputs ",(0,r.kt)("inlineCode",{parentName:"p"},".py")," files to the directories ",(0,r.kt)("inlineCode",{parentName:"p"},"csdl/examples/valid/")," and\n",(0,r.kt)("inlineCode",{parentName:"p"},"csdl/examples/invalid/"),".\nThe ",(0,r.kt)("inlineCode",{parentName:"p"},"csdl/examples/valid/")," directory contains examples defined by\nclasses whose names start with ",(0,r.kt)("inlineCode",{parentName:"p"},"Example"),".\nThe function definitions in these files can be used by ",(0,r.kt)("inlineCode",{parentName:"p"},"pytest")," to check\nthat the example computes correct values.\nThe ",(0,r.kt)("inlineCode",{parentName:"p"},"csdl/examples/invalid/")," directory contains examples defined by\nclasses whose names start with ",(0,r.kt)("inlineCode",{parentName:"p"},"Error"),".\nThe function definitions in these files can be used by ",(0,r.kt)("inlineCode",{parentName:"p"},"pytest")," to check\nthat the example emits the appropriate error for a given invalid input."),(0,r.kt)("h3",{id:"defining-a-test-using-an-example"},"Defining a Test Using an Example"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"csdl/tests")," directory contains all the tests.\nEach test suite is a Python file with a name that starts with the\n",(0,r.kt)("inlineCode",{parentName:"p"},"test_")," prefix.\n",(0,r.kt)("inlineCode",{parentName:"p"},"pytest")," automatically detects test cases contained within files whose\nnames begin with ",(0,r.kt)("inlineCode",{parentName:"p"},"test_")," if no file is passed to ",(0,r.kt)("inlineCode",{parentName:"p"},"pytest")," from the\nterminal/command line."),(0,r.kt)("p",null,"To write a test suite, create a file with ",(0,r.kt)("inlineCode",{parentName:"p"},"test_")," as a prefix and add\nthe following imports:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-py"},"import numpy as np\nimport pytest\n")),(0,r.kt)("p",null,"If adding a test case to an existing test suite, you can simply open an\nexisting file that already has these imports.\nThen, define a test case:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-py"},"# Name the function, adding the `test_` prefix to the function name.\n# The `backend` argument (of Simulator class) is required.\n# The `backend` argument is specified on the command line.\ndef test_name_of_test(backend):\n    # Import the _generated_ example function.\n    # Note that this example imports from `csdl.example.valid`, not\n    # `csdl.example`.\n    from csdl.examples.valid.ex_average_single_vector import example\n\n    # Use exec to import `Simulator` class.\n    exec('from {} import Simulator'.format(backend))\n\n    # Run the example using the chosen back end\n    sim = example(eval('Simulator'))\n\n    # Compute the desired output without using CSDL.\n    x = ...\n\n    # Compare expected output with actual computed output.\n    np.testing.assert_almost_equal(sim['x'], x)\n\n    # Compute the error for all partial derivatives in the model\n    partials_error = sim.check_partials(\n        includes=['x'],\n        out_stream=None,\n        compact_print=True,\n        method='cs')\n\n    # Check that the partial derivatives are accurate to specified\n    # tolerance.\n    sim.assert_check_partials(partials_error,\n                              atol=1.e-6,\n                              rtol=1.e-6)\n")),(0,r.kt)("p",null,"The next section covers  how to generate worked example scripts from\nexample functions to include in the documentation."),(0,r.kt)("h2",{id:"generating-worked-example-scripts-for-documentation"},"Generating Worked Example Scripts for Documentation"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"csdl")," provides a script for generating example scripts from the\nexample function definitions, which use the ",(0,r.kt)("inlineCode",{parentName:"p"},"Simulator")," class from the\n",(0,r.kt)("inlineCode",{parentName:"p"},"csdl_om")," package.\nThe difference between an example function and an example script is that\nthe example function takes a ",(0,r.kt)("inlineCode",{parentName:"p"},"Simulator")," class (not an object) as an\nargument so that ",(0,r.kt)("inlineCode",{parentName:"p"},"pytest")," can call the function using any back end, and\nthe example script runs as a standalone script, using the ",(0,r.kt)("inlineCode",{parentName:"p"},"Simulator"),"\nclass from the ",(0,r.kt)("inlineCode",{parentName:"p"},"csdl_om")," back end.\nThe example script is necessary for generating worked examples shown\nin the final documentation."),(0,r.kt)("h2",{id:"adding-worked-examples-to-documentation"},"Adding Worked Examples to Documentation"),(0,r.kt)("ul",{className:"contains-task-list"},(0,r.kt)("li",{parentName:"ul",className:"task-list-item"},(0,r.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","TODO: make script robust")))}m.isMDXComponent=!0}}]);