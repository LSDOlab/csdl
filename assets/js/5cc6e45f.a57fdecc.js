"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2697],{3905:function(e,n,t){t.d(n,{Zo:function(){return d},kt:function(){return u}});var a=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=a.createContext({}),c=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},d=function(e){var n=c(e.components);return a.createElement(l.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},p=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),p=c(t),u=o,f=p["".concat(l,".").concat(u)]||p[u]||m[u]||r;return t?a.createElement(f,i(i({ref:n},d),{},{components:t})):a.createElement(f,i({ref:n},d))}));function u(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=t.length,i=new Array(r);i[0]=p;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var c=2;c<r;c++)i[c]=t[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}p.displayName="MDXCreateElement"},6701:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return d},default:function(){return p}});var a=t(7462),o=t(3366),r=(t(7294),t(3905)),i=["components"],s={title:"Advanced"},l=void 0,c={unversionedId:"tutorial/advanced",id:"tutorial/advanced",isDocsHomePage:!1,title:"Advanced",description:"------------------------------------------------------------------------",source:"@site/docs/tutorial/9-advanced.mdx",sourceDirName:"tutorial",slug:"/tutorial/advanced",permalink:"/csdl/docs/tutorial/advanced",editUrl:"https://github.com/lsdolab/csdl/edit/main/website/docs/tutorial/9-advanced.mdx",tags:[],version:"current",sidebarPosition:9,frontMatter:{title:"Advanced"},sidebar:"docs",previous:{title:"Optimization",permalink:"/csdl/docs/tutorial/optimization"},next:{title:"Best Practices",permalink:"/csdl/docs/tutorial/best-practices"}},d=[{value:"Custom Operations",id:"custom-operations",children:[]},{value:"Conditional Compilation",id:"conditional-compilation",children:[]},{value:"Using Loops to Add Several Models",id:"using-loops-to-add-several-models",children:[]}],m={toc:d};function p(e){var n=e.components,t=(0,o.Z)(e,i);return(0,r.kt)("wrapper",(0,a.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"custom-operations"},"Custom Operations"),(0,r.kt)("h2",{id:"conditional-compilation"},"Conditional Compilation"),(0,r.kt)("p",null,"You can use Python's ",(0,r.kt)("inlineCode",{parentName:"p"},"if"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"elif"),", and ",(0,r.kt)("inlineCode",{parentName:"p"},"else")," to perform\nconditional compilation."),(0,r.kt)("p",null,"Let's say you have a model of a wing in steady state flow, and different\nmodels for the aerodynamics below and above a Reynolds number of\n1,000,000.\nDepending on what condition you want to simulate, you could make the\ndecision at compile time as to which submodel to add to your model:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-py"},"if Re < 1000000:\n    self.add(SlowModel())\nelse:\n    self.add(FastModel())\n")),(0,r.kt)("p",null,"Only one model results in code generation because the condition is\nevaluated at compile time."),(0,r.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"CSDL does not offer a way of performing conditional execution at run\ntime."))),(0,r.kt)("h2",{id:"using-loops-to-add-several-models"},"Using Loops to Add Several Models"),(0,r.kt)("p",null,"A model specification can be constructed programmatically at compile\ntime, based on compile time constants (parameters)."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-py"},"class Example(Model):\n    def initialize(self):\n        self.parameters.declare('num_engines', default=2, types=int)\n        self.parameters.declare('engine_names', default=[], types=list)\n\n    def define(self):\n        # iterate over a number of engines, or a list of engine names\n        num_engines = self.parameters['num_engines']\n        engine_names = self.parameters['num_engines']\n        r = range(num_engines)\n        if len(engine_names) > 0:\n          r = engine_names\n\n        # add specified number of engines\n        for i in r:\n            # suppress promotions because all engines will have an\n            # output with the same name\n            self.add(EngineModel(),\n                name='engine_{}'.format(i),\n                promotes=[],\n            )\n\n        # compute total thrust provided by engines\n        thrusts = []\n        for i in r:\n            # declare a variable for each thrust\n            local_name = 'thrust_{}'.format(i)\n            thrust = self.declare_variable(local_name)\n            # connect thrust from each engine to a locally defined\n            # thrust variable\n            self.connect(\n                'engine_{}.thrust'.format(i),\n                local_name,\n            )\n            # store each variable reference in a list so it doesn't get\n            # deleted when it goes out of scope\n            thrusts.append(thrust)\n\n        # sum the thrusts using standard library function, sum\n        total_thrust = csdl.sum(*thrusts)\n        self.register_output('total_thrust', total_thrust)\n")),(0,r.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"All Python loops within a ",(0,r.kt)("inlineCode",{parentName:"p"},"Model.define")," definition are ",(0,r.kt)("em",{parentName:"p"},"compile time"),"\nloops.\nThat is, the loops are used to ",(0,r.kt)("em",{parentName:"p"},"construct the mathematical\nspecification")," procedurally ",(0,r.kt)("em",{parentName:"p"},"within the CSDL compiler front end"),", and\nare not executed during simulation."))))}p.isMDXComponent=!0}}]);