"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7504],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return u}});var i=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,i,r=function(e,n){if(null==e)return{};var t,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)t=o[i],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)t=o[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=i.createContext({}),s=function(e){var n=i.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},c=function(e){var n=s(e.components);return i.createElement(l.Provider,{value:n},e.children)},_={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},m=i.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),m=s(t),u=r,d=m["".concat(l,".").concat(u)]||m[u]||_[u]||o;return t?i.createElement(d,a(a({ref:n},c),{},{components:t})):i.createElement(d,a({ref:n},c))}));function u(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,a=new Array(o);a[0]=m;var p={};for(var l in n)hasOwnProperty.call(n,l)&&(p[l]=n[l]);p.originalType=e,p.mdxType="string"==typeof e?e:r,a[1]=p;for(var s=2;s<o;s++)a[s]=t[s];return i.createElement.apply(null,a)}return i.createElement.apply(null,t)}m.displayName="MDXCreateElement"},9805:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return p},contentTitle:function(){return l},metadata:function(){return s},toc:function(){return c},default:function(){return m}});var i=t(7462),r=t(3366),o=(t(7294),t(3905)),a=["components"],p={},l=void 0,s={unversionedId:"worked_examples/ex_implicit_expose_fixed_point_iteration_with_expose",id:"worked_examples/ex_implicit_expose_fixed_point_iteration_with_expose",isDocsHomePage:!1,title:"ex_implicit_expose_fixed_point_iteration_with_expose",description:"`py",source:"@site/docs/worked_examples/ex_implicit_expose_fixed_point_iteration_with_expose.mdx",sourceDirName:"worked_examples",slug:"/worked_examples/ex_implicit_expose_fixed_point_iteration_with_expose",permalink:"/csdl/docs/worked_examples/ex_implicit_expose_fixed_point_iteration_with_expose",editUrl:"https://github.com/lsdolab/csdl/edit/main/website/docs/worked_examples/ex_implicit_expose_fixed_point_iteration_with_expose.mdx",tags:[],version:"current",frontMatter:{}},c=[],_={toc:c};function m(e){var n=e.components,t=(0,r.Z)(e,a);return(0,o.kt)("wrapper",(0,i.Z)({},_,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-py"},"from csdl_om import Simulator\nfrom csdl import Model, ScipyKrylov, NewtonSolver, NonlinearBlockGS\nimport numpy as np\n\n\nclass ExampleFixedPointIterationWithExpose(Model):\n\n    def define(self):\n        # x == (3 + x - 2 * x**2)**(1 / 4)\n        m1 = Model()\n        x = m1.declare_variable('a')\n        m1.register_output('r', x - (3 + x - 2 * x**2)**(1 / 4))\n        m1.register_output('t1', x**2)\n\n        # x == ((x + 3 - x**4) / 2)**(1 / 4)\n        m2 = Model()\n        x = m2.declare_variable('b')\n        m2.register_output('r', x - ((x + 3 - x**4) / 2)**(1 / 4))\n        m2.register_output('t2', x**2)\n\n        # x == 0.5 * x\n        m3 = Model()\n        x = m3.declare_variable('c')\n        m3.register_output('r', x - 0.5 * x)\n\n        solve_fixed_point_iteration1 = self.create_implicit_operation(\n            m1)\n        solve_fixed_point_iteration1.declare_state('a', residual='r')\n        solve_fixed_point_iteration1.nonlinear_solver = NonlinearBlockGS(\n            maxiter=100)\n        a, t1 = solve_fixed_point_iteration1(expose=['t1'])\n\n        solve_fixed_point_iteration2 = self.create_implicit_operation(\n            m2)\n        solve_fixed_point_iteration2.declare_state('b', residual='r')\n        solve_fixed_point_iteration2.nonlinear_solver = NonlinearBlockGS(\n            maxiter=100)\n        b, t2 = solve_fixed_point_iteration2(expose=['t2'])\n\n        solve_fixed_point_iteration3 = self.create_implicit_operation(\n            m3)\n        solve_fixed_point_iteration3.declare_state('c', residual='r')\n        solve_fixed_point_iteration3.nonlinear_solver = NonlinearBlockGS(\n            maxiter=100)\n        c = solve_fixed_point_iteration3()\n\n\nsim = Simulator(ExampleFixedPointIterationWithExpose())\nsim.run()\n\nprint('a', sim['a'].shape)\nprint(sim['a'])\nprint('b', sim['b'].shape)\nprint(sim['b'])\nprint('c', sim['c'].shape)\nprint(sim['c'])\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"======================\nModel_implicit_op_001u\n======================\nNL: NLBGS Converged in 48 iterations\n\n======================\nModel_implicit_op_001B\n======================\nNL: NLBGS Converged in 26 iterations\n\n======================\nModel_implicit_op_001F\n======================\nNL: NLBGS Converged in 34 iterations\na (1,)\n[1.12412303]\nb (1,)\n[1.07989607]\nc (1,)\n[5.82076609e-11]\n")))}m.isMDXComponent=!0}}]);