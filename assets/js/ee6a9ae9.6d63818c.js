"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8265],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return m}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},d=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=u(n),m=o,g=p["".concat(c,".").concat(m)]||p[m]||s[m]||i;return n?r.createElement(g,a(a({ref:t},d),{},{components:n})):r.createElement(g,a({ref:t},d))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=p;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var u=2;u<i;u++)a[u]=n[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},6211:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return u},toc:function(){return d},default:function(){return p}});var r=n(7462),o=n(3366),i=(n(7294),n(3905)),a=["components"],l={},c="Building and Updating Documentation",u={unversionedId:"developer/contributing/docs",id:"developer/contributing/docs",isDocsHomePage:!1,title:"Building and Updating Documentation",description:"Building Documentation",source:"@site/docs/developer/contributing/docs.mdx",sourceDirName:"developer/contributing",slug:"/developer/contributing/docs",permalink:"/csdl/docs/developer/contributing/docs",editUrl:"https://github.com/lsdolab/csdl/edit/main/website/docs/developer/contributing/docs.mdx",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Building a Compiler Back End",permalink:"/csdl/docs/developer/contributing/backend"}},d=[{value:"Building Documentation",id:"building-documentation",children:[]},{value:"Generating API Docs",id:"generating-api-docs",children:[]},{value:"Generating Worked Examples",id:"generating-worked-examples",children:[]},{value:"Deployment",id:"deployment",children:[]}],s={toc:d};function p(e){var t=e.components,n=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"building-and-updating-documentation"},"Building and Updating Documentation"),(0,i.kt)("h2",{id:"building-documentation"},"Building Documentation"),(0,i.kt)("p",null,"The documentation for ",(0,i.kt)("inlineCode",{parentName:"p"},"csdl")," is built using\n",(0,i.kt)("a",{parentName:"p",href:"https://docusaurus.io/"},"Docusaurus"),".\nTo build the documentation locally, you will first need to generate the\n",(0,i.kt)("a",{parentName:"p",href:"#generating-api-docs"},"API docs")," and the\n",(0,i.kt)("a",{parentName:"p",href:"#generating-worked-examples"},"worked examples")," below.\nWithout the generated files, Docusaurus will fail to build the\ndocumentation website."),(0,i.kt)("p",null,"Once the files are generated, you may run"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"cd docs\nnpx docusaurus run\n")),(0,i.kt)("p",null,"The website will be hosted at\n",(0,i.kt)("a",{parentName:"p",href:"localhost:3000/csdl"},"localhost:3000/csdl"),"."),(0,i.kt)("h2",{id:"generating-api-docs"},"Generating API Docs"),(0,i.kt)("p",null,"When making changes to the API, the ",(0,i.kt)("inlineCode",{parentName:"p"},"generate_api_docs.sh")," script is\nrequired to generate the API documentation.\nThe ",(0,i.kt)("inlineCode",{parentName:"p"},"csdl/utils/generate_api_docs.sh")," script relies on pydoc-markdown to\ngenerate Markdown files containing the API documentation."),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"csdl/utils/generate_api_docs.sh")," script uses the config files\n",(0,i.kt)("inlineCode",{parentName:"p"},"csdl/utils/user.yml")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"csdl/utils/def.yml")," to generate the user API\nand developer API, respectively."),(0,i.kt)("h2",{id:"generating-worked-examples"},"Generating Worked Examples"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"docs/.gitignore")," file is set to ignore worked examples.\nGitHub automatically generates the worked examples to include in\ndocumentation from the test cases."),(0,i.kt)("h2",{id:"deployment"},"Deployment"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},".github/workflows/doc_pages_workflow.yml")," file defines the workflow\nfor a GitHub Action that generates the website for ",(0,i.kt)("inlineCode",{parentName:"p"},"csdl"),".\nThe workflow follows the instructions given in\n",(0,i.kt)("a",{parentName:"p",href:"https://docusaurus.io/docs/deployment#deploying-to-github-pages"},"Docusaurus"),"."))}p.isMDXComponent=!0}}]);