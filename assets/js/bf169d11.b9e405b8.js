"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8500,4449],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return d}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var m=r.createContext({}),l=function(e){var n=r.useContext(m),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},u=function(e){var n=l(e.components);return r.createElement(m.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,m=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),p=l(t),d=a,f=p["".concat(m,".").concat(d)]||p[d]||c[d]||i;return t?r.createElement(f,s(s({ref:n},u),{},{components:t})):r.createElement(f,s({ref:n},u))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,s=new Array(i);s[0]=p;var o={};for(var m in n)hasOwnProperty.call(n,m)&&(o[m]=n[m]);o.originalType=e,o.mdxType="string"==typeof e?e:a,s[1]=o;for(var l=2;l<i;l++)s[l]=t[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},8168:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return m},contentTitle:function(){return l},metadata:function(){return u},toc:function(){return c},default:function(){return d}});var r=t(7462),a=t(3366),i=(t(7294),t(3905)),s=t(142),o=["components"],m={},l="Sum of a Single Matrix",u={unversionedId:"examples/Standard Library/sum/ex_sum_single_matrix",id:"examples/Standard Library/sum/ex_sum_single_matrix",isDocsHomePage:!1,title:"Sum of a Single Matrix",description:"This is an example of computing the sum of a single matrix input.",source:"@site/docs/examples/Standard Library/sum/ex_sum_single_matrix.mdx",sourceDirName:"examples/Standard Library/sum",slug:"/examples/Standard Library/sum/ex_sum_single_matrix",permalink:"/csdl/docs/examples/Standard Library/sum/ex_sum_single_matrix",editUrl:"https://github.com/lsdolab/csdl/edit/main/website/docs/examples/Standard Library/sum/ex_sum_single_matrix.mdx",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Sum of Multiple Vectors",permalink:"/csdl/docs/examples/Standard Library/sum/ex_sum_multiple_vector"},next:{title:"Sum of a Single Matrix along Columns",permalink:"/csdl/docs/examples/Standard Library/sum/ex_sum_single_matrix_along0"}},c=[],p={toc:c};function d(e){var n=e.components,t=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"sum-of-a-single-matrix"},"Sum of a Single Matrix"),(0,i.kt)("p",null,"This is an example of computing the sum of a single matrix input."),(0,i.kt)(s.default,{mdxType:"WorkedExample"}))}d.isMDXComponent=!0},142:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return o},contentTitle:function(){return m},metadata:function(){return l},toc:function(){return u},default:function(){return p}});var r=t(7462),a=t(3366),i=(t(7294),t(3905)),s=["components"],o={},m=void 0,l={unversionedId:"worked_examples/ex_sum_single_matrix",id:"worked_examples/ex_sum_single_matrix",isDocsHomePage:!1,title:"ex_sum_single_matrix",description:"`py",source:"@site/docs/worked_examples/ex_sum_single_matrix.mdx",sourceDirName:"worked_examples",slug:"/worked_examples/ex_sum_single_matrix",permalink:"/csdl/docs/worked_examples/ex_sum_single_matrix",editUrl:"https://github.com/lsdolab/csdl/edit/main/website/docs/worked_examples/ex_sum_single_matrix.mdx",tags:[],version:"current",frontMatter:{}},u=[],c={toc:u};function p(e){var n=e.components,t=(0,a.Z)(e,s);return(0,i.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-py"},"from csdl_om import Simulator\nfrom csdl import Model\nimport csdl\nimport numpy as np\n\n\nclass ExampleSingleMatrix(Model):\n\n    def define(self):\n        n = 3\n        m = 6\n\n        # Declare a matrix of shape 3x6 as input\n        M1 = self.declare_variable('M1',\n                                   val=np.arange(n * m).reshape((n, m)))\n\n        # Output the sum of all the elements of the tensor T1\n        self.register_output('single_matrix_sum', csdl.sum(M1))\n\n\nsim = Simulator(ExampleSingleMatrix())\nsim.run()\n\nprint('M1', sim['M1'].shape)\nprint(sim['M1'])\nprint('single_matrix_sum', sim['single_matrix_sum'].shape)\nprint(sim['single_matrix_sum'])\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-M1",metastring:"(3, 6)","(3,":!0,"6)":!0},"[[ 0.  1.  2.  3.  4.  5.]\n [ 6.  7.  8.  9. 10. 11.]\n [12. 13. 14. 15. 16. 17.]]\nsingle_matrix_sum (1,)\n[153.]\n")))}p.isMDXComponent=!0}}]);