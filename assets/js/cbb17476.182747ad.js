"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6243],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return d}});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=c(r),d=i,_=m["".concat(s,".").concat(d)]||m[d]||u[d]||o;return r?n.createElement(_,a(a({ref:t},p),{},{components:r})):n.createElement(_,a({ref:t},p))}));function d(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,a=new Array(o);a[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var c=2;c<o;c++)a[c]=r[c];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},3147:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return p},default:function(){return m}});var n=r(7462),i=r(3366),o=(r(7294),r(3905)),a=["components"],l={},s=void 0,c={unversionedId:"worked_examples/ex_implicit_with_subsystems",id:"worked_examples/ex_implicit_with_subsystems",isDocsHomePage:!1,title:"ex_implicit_with_subsystems",description:"`py",source:"@site/docs/worked_examples/ex_implicit_with_subsystems.mdx",sourceDirName:"worked_examples",slug:"/worked_examples/ex_implicit_with_subsystems",permalink:"/csdl/docs/worked_examples/ex_implicit_with_subsystems",editUrl:"https://github.com/lsdolab/csdl/edit/main/website/docs/worked_examples/ex_implicit_with_subsystems.mdx",tags:[],version:"current",frontMatter:{}},p=[],u={toc:p};function m(e){var t=e.components,r=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-py"},"from csdl_om import Simulator\nfrom csdl import Model, ScipyKrylov, NewtonSolver, NonlinearBlockGS\nimport numpy as np\n\n\nclass ExampleWithSubsystems(Model):\n\n    def define(self):\n        with self.create_submodel('R') as model:\n            p = model.create_input('p', val=7)\n            q = model.create_input('q', val=8)\n            r = p + q\n            model.register_output('r', r)\n        r = self.declare_variable('r')\n\n        m2 = Model()\n        a = m2.declare_variable('a')\n        r = m2.register_output('r', a - ((a + 3 - a**4) / 2)**(1 / 4))\n\n        m3 = Model()\n        a = m3.declare_variable('a')\n        b = m3.declare_variable('b')\n        c = m3.declare_variable('c')\n        r = m3.declare_variable('r')\n        y = m3.declare_variable('y')\n        m3.register_output('z', a * y**2 + b * y + c - r)\n\n        solve_fixed_point_iteration = self.create_implicit_operation(m2)\n        solve_fixed_point_iteration.declare_state('a', residual='r')\n        solve_fixed_point_iteration.nonlinear_solver = NonlinearBlockGS(\n            maxiter=100)\n        a = solve_fixed_point_iteration()\n\n        solve_quadratic = self.create_implicit_operation(m3)\n        b = self.create_input('b', val=-4)\n        solve_quadratic.declare_state('y', residual='z')\n        solve_quadratic.nonlinear_solver = NewtonSolver(\n            solve_subsystems=False,\n            maxiter=100,\n            iprint=False,\n        )\n        solve_quadratic.linear_solver = ScipyKrylov()\n\n        c = self.declare_variable('c', val=18)\n        y = solve_quadratic(a, b, c, r)\n\n\nsim = Simulator(ExampleWithSubsystems())\nsim.run()\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"======================\nModel_implicit_op_00fh\n======================\nNL: NLBGS Converged in 24 iterations\n")))}m.isMDXComponent=!0}}]);