"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5090],{3905:function(e,a,t){t.d(a,{Zo:function(){return p},kt:function(){return h}});var n=t(7294);function s(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function i(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function r(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?i(Object(t),!0).forEach((function(a){s(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function o(e,a){if(null==e)return{};var t,n,s=function(e,a){if(null==e)return{};var t,n,s={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],a.indexOf(t)>=0||(s[t]=e[t]);return s}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var m=n.createContext({}),l=function(e){var a=n.useContext(m),t=a;return e&&(t="function"==typeof e?e(a):r(r({},a),e)),t},p=function(e){var a=l(e.components);return n.createElement(m.Provider,{value:a},e.children)},c={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},d=n.forwardRef((function(e,a){var t=e.components,s=e.mdxType,i=e.originalType,m=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=l(t),h=s,u=d["".concat(m,".").concat(h)]||d[h]||c[h]||i;return t?n.createElement(u,r(r({ref:a},p),{},{components:t})):n.createElement(u,r({ref:a},p))}));function h(e,a){var t=arguments,s=a&&a.mdxType;if("string"==typeof e||s){var i=t.length,r=new Array(i);r[0]=d;var o={};for(var m in a)hasOwnProperty.call(a,m)&&(o[m]=a[m]);o.originalType=e,o.mdxType="string"==typeof e?e:s,r[1]=o;for(var l=2;l<i;l++)r[l]=t[l];return n.createElement.apply(null,r)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"},1863:function(e,a,t){t.r(a),t.d(a,{frontMatter:function(){return o},contentTitle:function(){return m},metadata:function(){return l},toc:function(){return p},default:function(){return d}});var n=t(7462),s=t(3366),i=(t(7294),t(3905)),r=["components"],o={title:"Language Concepts"},m=void 0,l={unversionedId:"tutorial/concepts",id:"tutorial/concepts",isDocsHomePage:!1,title:"Language Concepts",description:"------------------------------------------------------------------------",source:"@site/docs/tutorial/3-concepts.mdx",sourceDirName:"tutorial",slug:"/tutorial/concepts",permalink:"/csdl/docs/tutorial/concepts",editUrl:"https://github.com/lsdolab/csdl/edit/main/website/docs/tutorial/3-concepts.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"Language Concepts"},sidebar:"docs",previous:{title:"A Simple Example to Get Started",permalink:"/csdl/docs/tutorial/simple_example"},next:{title:"Variable Types",permalink:"/csdl/docs/tutorial/types"}},p=[{value:"Model",id:"model",children:[]},{value:"Variable",id:"variable",children:[]},{value:"Operation",id:"operation",children:[]},{value:"Simulator",id:"simulator",children:[]},{value:"Compile Time vs Run Time",id:"compile-time-vs-run-time",children:[]},{value:"Parameters",id:"parameters",children:[]}],c={toc:p};function d(e){var a=e.components,t=(0,s.Z)(e,r);return(0,i.kt)("wrapper",(0,n.Z)({},c,t,{components:a,mdxType:"MDXLayout"}),(0,i.kt)("hr",null),(0,i.kt)("p",null,"This section covers the basic concepts of CSDL that you will need to\nunderstand in order to write effective CSDL code.\nIn this section, you will learn about the basic object types (or\nclasses),"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Model"),(0,i.kt)("li",{parentName:"ul"},"Variable"),(0,i.kt)("li",{parentName:"ul"},"Operation")),(0,i.kt)("p",null,"In addition to the basic classes, this section presents ideas for\nunderstanding CSDL as a compiled language.\nThis tutorial will refer back to and build upon the concepts presented\nin this section."),(0,i.kt)("h2",{id:"model"},"Model"),(0,i.kt)("p",null,"A CSDL model is a mathematical specification of a physical system.\nThe majority of user code is located in the definition for a user\ndefined class that inherits from the ",(0,i.kt)("inlineCode",{parentName:"p"},"Model"),' class.\nUsers can supply a mathematical specification using a functional\nprogramming style, which resembles mathematical notation, to define a\nmodel as a composition of functions.\nUsers can also supply a mathematical specification using an object\noriented programming style, to define a model as a composition of\nmodels.\nThis composition defines a model hierarchy, where the top level model is\nthe "main" model, representing the entire system (e.g. a vehicle) and\nthe models further down the hierarchy represent subsystem, or\ndisciplines (e.g. aerodynamics, structures, propulsion).\nThe model hierarchy has a\n',(0,i.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Tree_(data_structure)"},"tree")," structure;\neach model has at most one parent, and any number of children.\nAssembling a model hierarchy is done using the\n",(0,i.kt)("a",{parentName:"p",href:"/docs/lang_ref/model#add"},(0,i.kt)("inlineCode",{parentName:"a"},"Model.add"))," method.\nConnections between models are issued via the\n",(0,i.kt)("a",{parentName:"p",href:"/docs/lang_ref/model#connect"},(0,i.kt)("inlineCode",{parentName:"a"},"Model.connect"))," method.\nConnections represent equality between variables declared or defined in\ndifferent disciplines.\nFor example, one discipline could compute the load on a wing due to\naerodynamic forces, and another discipline could use that load as an\ninput to compute the wing deflection."),(0,i.kt)("p",null,"Users are free to define a model specification using a mix of the\nfunctional and object oriented paradigms.\nModel specifications are defined within the\n",(0,i.kt)("a",{parentName:"p",href:"/docs/lang_ref/model#define"},(0,i.kt)("inlineCode",{parentName:"a"},"Model.define"))," method.\nFor example,"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-py"},"from csdl import Model\n\nclass Example(Model):\n    def define(self):\n        # mathematical specification goes here\n")),(0,i.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"The ",(0,i.kt)("inlineCode",{parentName:"p"},"Model")," class and user defined subclasses ",(0,i.kt)("em",{parentName:"p"},"do not provide an\nimplementation"),".\nTo generate an implementation, an object of the ",(0,i.kt)("inlineCode",{parentName:"p"},"Simulator")," class must\nbe constructed from a ",(0,i.kt)("inlineCode",{parentName:"p"},"Model")," object.\nThe ",(0,i.kt)("inlineCode",{parentName:"p"},"csdl")," package supplies the ",(0,i.kt)("inlineCode",{parentName:"p"},"Model")," class, while a separate package\nchosen by the user supplies the ",(0,i.kt)("inlineCode",{parentName:"p"},"Simulator")," class."))),(0,i.kt)("h2",{id:"variable"},"Variable"),(0,i.kt)("p",null,"The concept of a variable in CSDL differs from the concept of a variable\nin Python.\nIn Python, variables store ",(0,i.kt)("em",{parentName:"p"},"run time values"),", e.g. ",(0,i.kt)("inlineCode",{parentName:"p"},"x=3"),", or\n",(0,i.kt)("inlineCode",{parentName:"p"},"a=np.eye(3)"),".\nIn CSDL, a variable stores the ",(0,i.kt)("em",{parentName:"p"},"history of previous operations and\nvariables")," used to define that variable.\nThe histories form a structure called a Directed Acyclic Graph (DAG).\nThe nodes of the DAG are variables and operations.\nThis DAG structure forms and intermediate representation (IR) of the program.\nStoring an IR of the program comes with many\nbenfits.\nThe CSDL IR can store properties of variables and\noperations that the compiler can exploit, either before generating the\nfinal executable, or during code generation.\nFor example, the compiler back end is free to implement derivative\ncomputation for each operation, requiring no additional input from the\nuser."),(0,i.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Because CSDL variables do not store run time values, printing a CSDL\nvariable will not show its run time value.\nIn order to print a run time value for a variable, use the\n",(0,i.kt)("a",{parentName:"p",href:"/docs/lang_ref/model#print_var"},(0,i.kt)("inlineCode",{parentName:"a"},"Model.print_var"))," method."))),(0,i.kt)("p",null,"CSDL variables can be used the same way Python variables are used.\nFor example,"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-py"},"from csdl import Model\nimport csdl\n\nclass Example(Model):\n    def define(self):\n        # construct csdl Variable objects\n        x = self.declare_variable('x')\n        m = self.declare_variable('m')\n        b = self.declare_variable('b')\n\n        # define new Variable objects just as Python variables are defined\n        y = m*x**2 + b\n        # call functions from CSDL standard library\n        z = csdl.sin(x)\n\n        # register variables as outputs to make CSDL aware of variable definitions\n        self.register_output('y', y)\n        self.register_output('z', z)\n")),(0,i.kt)("p",null,"The next section, ",(0,i.kt)("a",{parentName:"p",href:"types"},"Variable Types"),", will cover\n",(0,i.kt)("a",{parentName:"p",href:"/docs/lang_ref/model#declare_variable"},(0,i.kt)("inlineCode",{parentName:"a"},"Model.declare_variable")),"  and\n",(0,i.kt)("a",{parentName:"p",href:"/docs/lang_ref/model#register_output"},(0,i.kt)("inlineCode",{parentName:"a"},"Model.register_output"))," into\nmore detail."),(0,i.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"CSDL variables have some limitations.\nUnlike NumPy arrays, CSDL variables do not support broadcasting. In\norder to perform elementwise multiplication, for example, a scalar\nvariable (array with shape ",(0,i.kt)("inlineCode",{parentName:"p"},"(1,)"),") by a variable that represents a\nvector, tensor, or matrix, users must use the ",(0,i.kt)("inlineCode",{parentName:"p"},"csdl.reshape")," or\n",(0,i.kt)("inlineCode",{parentName:"p"},"csdl.expand")," functions to make the shapes of the operands compatible."))),(0,i.kt)("p",null,"As mentioned in ",(0,i.kt)("a",{parentName:"p",href:"#model"},"Model"),", CSDL users can use a functional or\nobject oriented style to define a model specification.\nDefining variables in terms of other variables, or as functions of\nvariables, is how users define a model specification using the\nfunctional programming style.\nMost user defined models will use the functional programming style,\nespecially the simplest models."),(0,i.kt)("p",null,"Part of the functional style to keep in mind is that CSDL variables are\n",(0,i.kt)("em",{parentName:"p"},"immutable"),"; once a variable is defined, there is no way to express a\nchange (or mutation) in that variable's value at run time.\nIn some cases, variable values cannot be defined explicitly, rather,\nthey must be computed iteratively.\nFor example, a function ",(0,i.kt)("span",{parentName:"p",className:"math math-inline"},(0,i.kt)("span",{parentName:"span",className:"katex"},(0,i.kt)("span",{parentName:"span",className:"katex-mathml"},(0,i.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,i.kt)("semantics",{parentName:"math"},(0,i.kt)("mrow",{parentName:"semantics"},(0,i.kt)("mi",{parentName:"mrow"},"f"),(0,i.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,i.kt)("mi",{parentName:"mrow"},"x"),(0,i.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,i.kt)("mi",{parentName:"mrow"},"y"),(0,i.kt)("mo",{parentName:"mrow",stretchy:"false"},")"),(0,i.kt)("mo",{parentName:"mrow"},"="),(0,i.kt)("mn",{parentName:"mrow"},"0")),(0,i.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"f(x,y)=0")))),(0,i.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,i.kt)("span",{parentName:"span",className:"base"},(0,i.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.10764em"}},"f"),(0,i.kt)("span",{parentName:"span",className:"mopen"},"("),(0,i.kt)("span",{parentName:"span",className:"mord mathnormal"},"x"),(0,i.kt)("span",{parentName:"span",className:"mpunct"},","),(0,i.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,i.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03588em"}},"y"),(0,i.kt)("span",{parentName:"span",className:"mclose"},")"),(0,i.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,i.kt)("span",{parentName:"span",className:"mrel"},"="),(0,i.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,i.kt)("span",{parentName:"span",className:"base"},(0,i.kt)("span",{parentName:"span",className:"strut",style:{height:"0.64444em",verticalAlign:"0em"}}),(0,i.kt)("span",{parentName:"span",className:"mord"},"0")))))," that takes ",(0,i.kt)("span",{parentName:"p",className:"math math-inline"},(0,i.kt)("span",{parentName:"span",className:"katex"},(0,i.kt)("span",{parentName:"span",className:"katex-mathml"},(0,i.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,i.kt)("semantics",{parentName:"math"},(0,i.kt)("mrow",{parentName:"semantics"},(0,i.kt)("mi",{parentName:"mrow"},"x")),(0,i.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"x")))),(0,i.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,i.kt)("span",{parentName:"span",className:"base"},(0,i.kt)("span",{parentName:"span",className:"strut",style:{height:"0.43056em",verticalAlign:"0em"}}),(0,i.kt)("span",{parentName:"span",className:"mord mathnormal"},"x")))))," as an input and whose\noutput is ",(0,i.kt)("span",{parentName:"p",className:"math math-inline"},(0,i.kt)("span",{parentName:"span",className:"katex"},(0,i.kt)("span",{parentName:"span",className:"katex-mathml"},(0,i.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,i.kt)("semantics",{parentName:"math"},(0,i.kt)("mrow",{parentName:"semantics"},(0,i.kt)("mi",{parentName:"mrow"},"y")),(0,i.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"y")))),(0,i.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,i.kt)("span",{parentName:"span",className:"base"},(0,i.kt)("span",{parentName:"span",className:"strut",style:{height:"0.625em",verticalAlign:"-0.19444em"}}),(0,i.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03588em"}},"y")))))," requires an iterative solution if the equation ",(0,i.kt)("span",{parentName:"p",className:"math math-inline"},(0,i.kt)("span",{parentName:"span",className:"katex"},(0,i.kt)("span",{parentName:"span",className:"katex-mathml"},(0,i.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,i.kt)("semantics",{parentName:"math"},(0,i.kt)("mrow",{parentName:"semantics"},(0,i.kt)("mi",{parentName:"mrow"},"f"),(0,i.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,i.kt)("mi",{parentName:"mrow"},"x"),(0,i.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,i.kt)("mi",{parentName:"mrow"},"y"),(0,i.kt)("mo",{parentName:"mrow",stretchy:"false"},")"),(0,i.kt)("mo",{parentName:"mrow"},"="),(0,i.kt)("mn",{parentName:"mrow"},"0")),(0,i.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"f(x,y)=0")))),(0,i.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,i.kt)("span",{parentName:"span",className:"base"},(0,i.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.10764em"}},"f"),(0,i.kt)("span",{parentName:"span",className:"mopen"},"("),(0,i.kt)("span",{parentName:"span",className:"mord mathnormal"},"x"),(0,i.kt)("span",{parentName:"span",className:"mpunct"},","),(0,i.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,i.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03588em"}},"y"),(0,i.kt)("span",{parentName:"span",className:"mclose"},")"),(0,i.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,i.kt)("span",{parentName:"span",className:"mrel"},"="),(0,i.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,i.kt)("span",{parentName:"span",className:"base"},(0,i.kt)("span",{parentName:"span",className:"strut",style:{height:"0.64444em",verticalAlign:"0em"}}),(0,i.kt)("span",{parentName:"span",className:"mord"},"0"))))),"\ncannot be rearranged so that ",(0,i.kt)("span",{parentName:"p",className:"math math-inline"},(0,i.kt)("span",{parentName:"span",className:"katex"},(0,i.kt)("span",{parentName:"span",className:"katex-mathml"},(0,i.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,i.kt)("semantics",{parentName:"math"},(0,i.kt)("mrow",{parentName:"semantics"},(0,i.kt)("mi",{parentName:"mrow"},"y")),(0,i.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"y")))),(0,i.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,i.kt)("span",{parentName:"span",className:"base"},(0,i.kt)("span",{parentName:"span",className:"strut",style:{height:"0.625em",verticalAlign:"-0.19444em"}}),(0,i.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03588em"}},"y")))))," is isolated to one side of the\nequation.\nIn this case, a solver is required to mutate the value at run time until\na residual ",(0,i.kt)("span",{parentName:"p",className:"math math-inline"},(0,i.kt)("span",{parentName:"span",className:"katex"},(0,i.kt)("span",{parentName:"span",className:"katex-mathml"},(0,i.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,i.kt)("semantics",{parentName:"math"},(0,i.kt)("mrow",{parentName:"semantics"},(0,i.kt)("msub",{parentName:"mrow"},(0,i.kt)("mi",{parentName:"msub"},"r"),(0,i.kt)("mi",{parentName:"msub"},"y")),(0,i.kt)("mo",{parentName:"mrow"},"="),(0,i.kt)("mi",{parentName:"mrow"},"f"),(0,i.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,i.kt)("mi",{parentName:"mrow"},"x"),(0,i.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,i.kt)("mi",{parentName:"mrow"},"y"),(0,i.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,i.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"r_y=f(x,y)")))),(0,i.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,i.kt)("span",{parentName:"span",className:"base"},(0,i.kt)("span",{parentName:"span",className:"strut",style:{height:"0.716668em",verticalAlign:"-0.286108em"}}),(0,i.kt)("span",{parentName:"span",className:"mord"},(0,i.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"r"),(0,i.kt)("span",{parentName:"span",className:"msupsub"},(0,i.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,i.kt)("span",{parentName:"span",className:"vlist-r"},(0,i.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15139200000000003em"}},(0,i.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"-0.02778em",marginRight:"0.05em"}},(0,i.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,i.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,i.kt)("span",{parentName:"span",className:"mord mathnormal mtight",style:{marginRight:"0.03588em"}},"y")))),(0,i.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,i.kt)("span",{parentName:"span",className:"vlist-r"},(0,i.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.286108em"}},(0,i.kt)("span",{parentName:"span"})))))),(0,i.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,i.kt)("span",{parentName:"span",className:"mrel"},"="),(0,i.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,i.kt)("span",{parentName:"span",className:"base"},(0,i.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.10764em"}},"f"),(0,i.kt)("span",{parentName:"span",className:"mopen"},"("),(0,i.kt)("span",{parentName:"span",className:"mord mathnormal"},"x"),(0,i.kt)("span",{parentName:"span",className:"mpunct"},","),(0,i.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,i.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03588em"}},"y"),(0,i.kt)("span",{parentName:"span",className:"mclose"},")")))))," converges within some tolerance.\nCSDL does not require users to implement solvers, but does not allow run\ntime loops either; i.e."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-py"},"class Example(Model):\n    def define(self):\n        x = self.declare_variable('x')\n        while x - 0.5*x > 1e-6:\n            x = 0.5*x\n")),(0,i.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Python does not enforce immutability, so if a variable is redefined (or\nin Python parlance, if a variable name is bound to a new reference),\nthen the object in memory storing the variable data is not in use in\nlater parts of the code."))),(0,i.kt)("ul",{className:"contains-task-list"},(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","TODO: emit error when using while loops?"),(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","TODO: link to std lib"),(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","TODO: finalze implicit API")),(0,i.kt)("h2",{id:"operation"},"Operation"),(0,i.kt)("ul",{className:"contains-task-list"},(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","TODO: finalze implicit API, discuss using implicit_operation")),(0,i.kt)("p",null,"The concept of an operation in CSDL also serves to construct the IR.\nUsers do not interact with operations except when defining\n",(0,i.kt)("a",{parentName:"p",href:"/docs/tutorial/advanced#custom-operations"},"Custom Operations"),", which is\ncovered in the ",(0,i.kt)("a",{parentName:"p",href:"/docs/tutorial/advanced"},"Advanced")," section of this\ntutorial, but it is still useful at this stage to understand how the IR\nis constructed when Python executes ",(0,i.kt)("inlineCode",{parentName:"p"},"Model.define"),".\nAs mentioned in ",(0,i.kt)("a",{parentName:"p",href:"#variable"},"Variable"),", the IR has the structure of a\nDAG, where nodes represent either variables or operations.\nEach operation node has at least one predecessor node of variable type,\nand at least one successor node of variable type.\nEach variable node has at most one predecessor node of operation type,\nand zero or more successor nodes of operation type."),(0,i.kt)("p",null,"Operations can store properties, such as whether or not they are linear\noperations, elementwise operations, posynomials, etc.\nThese properties are used for performing implementation-independent\noptimizations/graph transformations on the IR."),(0,i.kt)("p",null,"Derivatives for operations provided by the standard library are also\nimplemented in the CSDL compiler back end.\nOperation properties and derivatives are hidden from the user so that\ncode optimization and derivative implementation are automated, ensuring\nthat user code is clear and easily maintainable without sacrificing\nperformance of generated code."),(0,i.kt)("h2",{id:"simulator"},"Simulator"),(0,i.kt)("p",null,"The previous subsections describe (at a high level) how users define a\nmodel specification using the CSDL language.\nThe ",(0,i.kt)("inlineCode",{parentName:"p"},"csdl"),' package provides classes that represent all of the concepts\npresented up to this point.\nThe model specification is contained within a single top level, or\n"main" model, represented by a user defined subclass of ',(0,i.kt)("inlineCode",{parentName:"p"},"Model"),"."),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"Model")," class, however, contains only a ",(0,i.kt)("em",{parentName:"p"},"specification"),", not an\n",(0,i.kt)("em",{parentName:"p"},"implementation"),".\nThat is, there is no way of ",(0,i.kt)("em",{parentName:"p"},"simulating")," the model, given a ",(0,i.kt)("inlineCode",{parentName:"p"},"Model"),"\ndefinition."),(0,i.kt)("p",null,"In order to simulate the model, CSDL requires the ",(0,i.kt)("inlineCode",{parentName:"p"},"Simulator")," class,\nwhich the ",(0,i.kt)("inlineCode",{parentName:"p"},"csdl")," package ",(0,i.kt)("em",{parentName:"p"},"does not provide"),"."),(0,i.kt)("h2",{id:"compile-time-vs-run-time"},"Compile Time vs Run Time"),(0,i.kt)("p",null,'CSDL is an embedded domain specific language (EDSL).\nCSDL is "embedded" in the sense that it relies on a host language to\nperform some compilation steps.\nCSDL is also a compiled language, which means that the user\'s code\ncannot be executed directly and must first be translated to executable\ncode -- compiled -- before the user can run the program.\nCSDL is also a compiled language, which means that users cannot run CSDL\ncode directly, but must first compile an executable object, and then run\na simulation using that executable object.\nIn languages like C, the compilation and execution steps are performed\nvia the command line separately, but in CSDL, the user invokes these\nsteps by issuing these commands within the same Python script where a\nmodel is defined.\nThe compilation and execution steps are separated as follows:'),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-py"},"from csdl import Model\nfrom somewhere_else import Simulator\n\n# user specifies model\nclass Example(Model):\n    def define(self):\n        # ...\n\n# user compiles an executable object, sim\nm = Model() # CSDL compiler front end and middle end execute\nsim = Simulator(m) # CSDL compiler back end executes\n\n# compilation complete\n# execute simulation\nsim.run()\n\n# simulation finished, analyze data\nplot(sim['x'], sim['y'])\n")),(0,i.kt)("p",null,"Even though CSDL is a compiled language, users interact with the CSDL\ncompiler via a Python script, and the compilation and execution steps\nare combined into one process.\nUnlike interpreted languages like Python, however, the CSDL compiler is\nan ahead-of-time compiler, as opposed to an interpreter/just-in-time\ncompiler."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"CSDL code is written in Python source files with a ",(0,i.kt)("inlineCode",{parentName:"li"},".py")," extension."),(0,i.kt)("li",{parentName:"ul"},"Python handles the parsing and lexing of CSDL code, just as any other\nPython code.")),(0,i.kt)("p",null,"This means that although user code specifies a program's execution, the\ncomputer does not run user code directly.\nInstead, user code is tranformed from a high level language (CSDL) to\nlow-level code (generated by user selected CSDL compiler back end) that\na computer can then execute.\nThe CSDL compiler is a three stage compiler consisting of a front end, a\nmiddle end, and a back end.\nThe front end constructs an IR from user code and the middle end\nperforms implementation-independent optimizations on that IR.\nThe back end completes the compilation process, generating low-level\nexecutable code from the optimized IR."),(0,i.kt)("p",null,"The CSDL compiler front end and middle end are implemented in the\n",(0,i.kt)("inlineCode",{parentName:"p"},"Model")," class in the ",(0,i.kt)("inlineCode",{parentName:"p"},"csdl")," package.\nThe CSDL back end is implemented in the ",(0,i.kt)("inlineCode",{parentName:"p"},"Simulator")," class, which a\nseparate package (selected by the user) provides.\nThe ",(0,i.kt)("inlineCode",{parentName:"p"},"Model")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"Simulator")," classes are Python interfaces to the\nCSDL compiler.\nThe CSDL compiler front end and middle end are implemented in Python.\nMost user code is written in the definition for a ",(0,i.kt)("inlineCode",{parentName:"p"},"Model")," subclass.\nCSDL user code is very similar to Python code, and the Standard Library\nhas an API that follows the NumPy library closely.\nWhen the Python interpreter constructs an instance of a user defined\n",(0,i.kt)("inlineCode",{parentName:"p"},"Model")," subclass, it runs CSDL user code (i.e. runs the\nCSDL compiler front end), which direcly constructs the\nIR; no simulation is performed.\nThe ",(0,i.kt)("inlineCode",{parentName:"p"},"Model")," class then performs implementation-independent\noptimizations on the IR (i.e.  runs the CSDL compiler middle end)."),(0,i.kt)("p",null,"CSDL user code only indirectly defines run time behavior.\nInstead, CSDL code defines the construction of the IR ."),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"Simulator")," class constructor takes a ",(0,i.kt)("inlineCode",{parentName:"p"},"Model")," object as an\nargument, generates low-level executable code, and stores a reference to\nthe executable object that the user can execute"),(0,i.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Without constructing an instance of a ",(0,i.kt)("inlineCode",{parentName:"p"},"Simulator")," class from a\nuser defined ",(0,i.kt)("inlineCode",{parentName:"p"},"Model")," subclass, the user has no way of simulating\nthe behavior specified in the ",(0,i.kt)("inlineCode",{parentName:"p"},"Model")," subclass, either for\nanalysis or optimization."),(0,i.kt)("p",{parentName:"div"},"Even though Python is an interpreted language, and users do not need\nto perform an extra compilation step (apart from constructing a\n",(0,i.kt)("inlineCode",{parentName:"p"},"Simulator")," object), all Python run time execution prior to a call\nto ",(0,i.kt)("inlineCode",{parentName:"p"},"Simulator.run")," is considered CSDL ",(0,i.kt)("em",{parentName:"p"},"compile time execution"),"."))),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"Model")," base class from the ",(0,i.kt)("inlineCode",{parentName:"p"},"csdl")," package provides an interface\nfor users to define a mathematical specification for a physical system.\nThe ",(0,i.kt)("inlineCode",{parentName:"p"},"Simulator")," class from a separate package selected by the user\nprovides an interface for users to compile an executable object that can\nrun a simulation."),(0,i.kt)("p",null,"with the ability to construct an IR directly, maintaining a\nhigh level of abstraction that hides a bunch of stuff.\nOnce the executable object is constructed, the user can run a simulation\nby calling the ",(0,i.kt)("inlineCode",{parentName:"p"},"Simulator.run")," method."),(0,i.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"The ",(0,i.kt)("inlineCode",{parentName:"p"},"Simulator")," class is not required to define a mathematical\nspecification.\nProjects that use CSDL will typically consist of a library of\n",(0,i.kt)("inlineCode",{parentName:"p"},"Model")," subclasses and functions that make use of the CSDL\nStandard Library.\nLibraries based on CSDL should depend only on the ",(0,i.kt)("inlineCode",{parentName:"p"},"csdl")," package.\nIndividual analyses and optimization problems, however, will not\nonly rely on ",(0,i.kt)("inlineCode",{parentName:"p"},"csdl"),", but also on the package selected to implement\nand run a simulation for a particular analysis or optimization."))),(0,i.kt)("ul",{className:"contains-task-list"},(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","TODO: default values")),(0,i.kt)("h2",{id:"parameters"},"Parameters"),(0,i.kt)("p",null,"Parameters are compile time constants that can be set by the user to\nchange a model definition per instance of a model.\nFor example, if a model requires time integration, the number of time\nsteps and the step size can be set without creating a new model\ndefinition.\nParameters are also useful for setting the resolution of a mesh grid, or\nthe number of instances of another model to add as children in the model\nhierarchy (e.g. the number of satellites in a swarm).\nParameters make model definitions more generic, and thus reusable,\nreducing overhead for users of your library."),(0,i.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Parameters in CSDL can best be compared to non-type template\nparameters in C++ and const generics in Rust."))),(0,i.kt)("p",null,"Parameters can be of any Python type, and a  ",(0,i.kt)("inlineCode",{parentName:"p"},"Model")," definition can\nrestrict parameters to a set of types."),(0,i.kt)("p",null,"The CSDL ",(0,i.kt)("inlineCode",{parentName:"p"},"Model")," class has an attribute called ",(0,i.kt)("inlineCode",{parentName:"p"},"parameters"),", which\ngives users some power over a ",(0,i.kt)("inlineCode",{parentName:"p"},"Model")," subclass definition without\ndefining a new ",(0,i.kt)("inlineCode",{parentName:"p"},"Model")," subclass."),(0,i.kt)("p",null,"This makes ",(0,i.kt)("inlineCode",{parentName:"p"},"Model")," subclasses ",(0,i.kt)("em",{parentName:"p"},"generic"),".\nGeneric classes"),(0,i.kt)("p",null,"Other languages have the same concept as a CSDL parameter with different\nnames to enable generic user code."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"C++: non-type, or value parameters when using templates"),(0,i.kt)("li",{parentName:"ul"},"Rust: const generic")))}d.isMDXComponent=!0}}]);