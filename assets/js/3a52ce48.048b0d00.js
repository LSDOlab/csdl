"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8614,9531],{3905:function(e,r,t){t.d(r,{Zo:function(){return s},kt:function(){return d}});var n=t(7294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function i(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function l(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?i(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function o(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=n.createContext({}),m=function(e){var r=n.useContext(p),t=r;return e&&(t="function"==typeof e?e(r):l(l({},r),e)),t},s=function(e){var r=m(e.components);return n.createElement(p.Provider,{value:r},e.children)},u={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},c=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),c=m(t),d=a,f=c["".concat(p,".").concat(d)]||c[d]||u[d]||i;return t?n.createElement(f,l(l({ref:r},s),{},{components:t})):n.createElement(f,l({ref:r},s))}));function d(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var i=t.length,l=new Array(i);l[0]=c;var o={};for(var p in r)hasOwnProperty.call(r,p)&&(o[p]=r[p]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var m=2;m<i;m++)l[m]=t[m];return n.createElement.apply(null,l)}return n.createElement.apply(null,t)}c.displayName="MDXCreateElement"},6954:function(e,r,t){t.r(r),t.d(r,{frontMatter:function(){return p},contentTitle:function(){return m},metadata:function(){return s},toc:function(){return u},default:function(){return d}});var n=t(7462),a=t(3366),i=(t(7294),t(3905)),l=t(4716),o=["components"],p={},m="Average of Multiple Matrices",s={unversionedId:"examples/Standard Library/average/ex_average_multiple_matrix",id:"examples/Standard Library/average/ex_average_multiple_matrix",isDocsHomePage:!1,title:"Average of Multiple Matrices",description:"This is an example of computing the average of a multiple matrix inputs.",source:"@site/docs/examples/Standard Library/average/ex_average_multiple_matrix.mdx",sourceDirName:"examples/Standard Library/average",slug:"/examples/Standard Library/average/ex_average_multiple_matrix",permalink:"/csdl/docs/examples/Standard Library/average/ex_average_multiple_matrix",editUrl:"https://github.com/lsdolab/csdl/edit/main/website/docs/examples/Standard Library/average/ex_average_multiple_matrix.mdx",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Simple Explicit Expressions with Subsystems",permalink:"/csdl/docs/examples/Basic Examples/simple_explicit_with_subsystems"},next:{title:"Average of Multiple Matrices along Columns",permalink:"/csdl/docs/examples/Standard Library/average/ex_average_multiple_matrix_along0"}},u=[],c={toc:u};function d(e){var r=e.components,t=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,n.Z)({},c,t,{components:r,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"average-of-multiple-matrices"},"Average of Multiple Matrices"),(0,i.kt)("p",null,"This is an example of computing the average of a multiple matrix inputs."),(0,i.kt)(l.default,{mdxType:"WorkedExample"}))}d.isMDXComponent=!0},4716:function(e,r,t){t.r(r),t.d(r,{frontMatter:function(){return o},contentTitle:function(){return p},metadata:function(){return m},toc:function(){return s},default:function(){return c}});var n=t(7462),a=t(3366),i=(t(7294),t(3905)),l=["components"],o={},p=void 0,m={unversionedId:"worked_examples/ex_average_multiple_matrix",id:"worked_examples/ex_average_multiple_matrix",isDocsHomePage:!1,title:"ex_average_multiple_matrix",description:"`py",source:"@site/docs/worked_examples/ex_average_multiple_matrix.mdx",sourceDirName:"worked_examples",slug:"/worked_examples/ex_average_multiple_matrix",permalink:"/csdl/docs/worked_examples/ex_average_multiple_matrix",editUrl:"https://github.com/lsdolab/csdl/edit/main/website/docs/worked_examples/ex_average_multiple_matrix.mdx",tags:[],version:"current",frontMatter:{}},s=[],u={toc:s};function c(e){var r=e.components,t=(0,a.Z)(e,l);return(0,i.kt)("wrapper",(0,n.Z)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-py"},"from csdl_om import Simulator\nfrom csdl import Model\nimport csdl\nimport numpy as np\n\n\nclass ExampleMultipleMatrix(Model):\n\n    def define(self):\n        n = 3\n        m = 6\n\n        # Declare a matrix of shape 3x6 as input\n        M1 = self.declare_variable(\n            'M1',\n            val=np.arange(n * m).reshape((n, m)),\n        )\n\n        # Declare another matrix of shape 3x6 as input\n        M2 = self.declare_variable(\n            'M2',\n            val=np.arange(n * m, 2 * n * m).reshape((n, m)),\n        )\n\n        # Output the elementwise average of matrices M1 and M2\n        self.register_output(\n            'multiple_matrix_average',\n            csdl.average(M1, M2),\n        )\n\n\nsim = Simulator(ExampleMultipleMatrix())\nsim.run()\n\nprint('M1', sim['M1'].shape)\nprint(sim['M1'])\nprint('M2', sim['M2'].shape)\nprint(sim['M2'])\nprint('multiple_matrix_average', sim['multiple_matrix_average'].shape)\nprint(sim['multiple_matrix_average'])\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-M1",metastring:"(3, 6)","(3,":!0,"6)":!0},"[[ 0.  1.  2.  3.  4.  5.]\n [ 6.  7.  8.  9. 10. 11.]\n [12. 13. 14. 15. 16. 17.]]\nM2 (3, 6)\n[[18. 19. 20. 21. 22. 23.]\n [24. 25. 26. 27. 28. 29.]\n [30. 31. 32. 33. 34. 35.]]\nmultiple_matrix_average (3, 6)\n[[ 9. 10. 11. 12. 13. 14.]\n [15. 16. 17. 18. 19. 20.]\n [21. 22. 23. 24. 25. 26.]]\n")))}c.isMDXComponent=!0}}]);