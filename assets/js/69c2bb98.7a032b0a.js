"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3706],{3905:function(e,n,t){t.d(n,{Zo:function(){return l},kt:function(){return p}});var r=t(7294);function s(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){s(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,r,s=function(e,n){if(null==e)return{};var t,r,s={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(s[t]=e[t]);return s}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var i=r.createContext({}),u=function(e){var n=r.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},l=function(e){var n=u(e.components);return r.createElement(i.Provider,{value:n},e.children)},_={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,s=e.mdxType,o=e.originalType,i=e.parentName,l=a(e,["components","mdxType","originalType","parentName"]),m=u(t),p=s,v=m["".concat(i,".").concat(p)]||m[p]||_[p]||o;return t?r.createElement(v,c(c({ref:n},l),{},{components:t})):r.createElement(v,c({ref:n},l))}));function p(e,n){var t=arguments,s=n&&n.mdxType;if("string"==typeof e||s){var o=t.length,c=new Array(o);c[0]=m;var a={};for(var i in n)hasOwnProperty.call(n,i)&&(a[i]=n[i]);a.originalType=e,a.mdxType="string"==typeof e?e:s,c[1]=a;for(var u=2;u<o;u++)c[u]=t[u];return r.createElement.apply(null,c)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},183:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return a},contentTitle:function(){return i},metadata:function(){return u},toc:function(){return l},default:function(){return m}});var r=t(7462),s=t(3366),o=(t(7294),t(3905)),c=["components"],a={},i=void 0,u={unversionedId:"worked_examples/ex_sum_concatenate",id:"worked_examples/ex_sum_concatenate",isDocsHomePage:!1,title:"ex_sum_concatenate",description:"`py",source:"@site/docs/worked_examples/ex_sum_concatenate.mdx",sourceDirName:"worked_examples",slug:"/worked_examples/ex_sum_concatenate",permalink:"/csdl/docs/worked_examples/ex_sum_concatenate",editUrl:"https://github.com/lsdolab/csdl/edit/main/website/docs/worked_examples/ex_sum_concatenate.mdx",tags:[],version:"current",frontMatter:{}},l=[],_={toc:l};function m(e){var n=e.components,t=(0,s.Z)(e,c);return(0,o.kt)("wrapper",(0,r.Z)({},_,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-py"},"from csdl_om import Simulator\nfrom csdl import Model\nimport csdl\nimport numpy as np\n\n\nclass ExampleConcatenate(Model):\n\n    def define(self):\n        n = 5\n\n        # Declare a vector of length 3 as input\n        v1 = self.declare_variable('v1', val=np.arange(n))\n        v2 = self.declare_variable('v2', val=np.arange(n - 1))\n        v3 = self.declare_variable('v3', val=np.zeros(n))\n\n        # Output the sum of all the elements of the vector v1\n        single_vector_sum_1a = csdl.sum(v1, axes=(0, ))\n        single_vector_sum_1b = csdl.sum(v1)\n        self.register_output('single_vector_sum_1a',\n                             single_vector_sum_1a)\n        self.register_output('single_vector_sum_1b',\n                             single_vector_sum_1b)\n        single_vector_sum_2 = self.register_output(\n            'single_vector_sum_2', csdl.sum(v2, axes=(0, )))\n        single_vector_sum_3 = csdl.sum(v3)\n        self.register_output('single_vector_sum_3', single_vector_sum_3)\n\n        sum_vector = self.create_output(name='sum_vector', shape=(3, ))\n\n        sum_vector[0] = single_vector_sum_1a\n        sum_vector[1] = single_vector_sum_2\n        sum_vector[2] = single_vector_sum_3\n\n\nsim = Simulator(ExampleConcatenate())\nsim.run()\n\nprint('single_vector_sum_1a', sim['single_vector_sum_1a'].shape)\nprint(sim['single_vector_sum_1a'])\nprint('single_vector_sum_1b', sim['single_vector_sum_1b'].shape)\nprint(sim['single_vector_sum_1b'])\nprint('single_vector_sum_2', sim['single_vector_sum_2'].shape)\nprint(sim['single_vector_sum_2'])\nprint('single_vector_sum_3', sim['single_vector_sum_3'].shape)\nprint(sim['single_vector_sum_3'])\nprint('sum_vector', sim['sum_vector'].shape)\nprint(sim['sum_vector'])\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-single_vector_sum_1a",metastring:"(1,)","(1,)":!0},"[10.]\nsingle_vector_sum_1b (1,)\n[10.]\nsingle_vector_sum_2 (1,)\n[6.]\nsingle_vector_sum_3 (1,)\n[0.]\nsum_vector (3,)\n[10.  6.  0.]\n")))}m.isMDXComponent=!0}}]);