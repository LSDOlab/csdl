"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7261,611],{3905:function(e,t,r){r.d(t,{Zo:function(){return m},kt:function(){return d}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var u=n.createContext({}),s=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},m=function(e){var t=s(e.components);return n.createElement(u.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,l=e.originalType,u=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),p=s(r),d=o,f=p["".concat(u,".").concat(d)]||p[d]||c[d]||l;return r?n.createElement(f,a(a({ref:t},m),{},{components:r})):n.createElement(f,a({ref:t},m))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var l=r.length,a=new Array(l);a[0]=p;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i.mdxType="string"==typeof e?e:o,a[1]=i;for(var s=2;s<l;s++)a[s]=r[s];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},5455:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return u},contentTitle:function(){return s},metadata:function(){return m},toc:function(){return c},default:function(){return d}});var n=r(7462),o=r(3366),l=(r(7294),r(3905)),a=r(1364),i=["components"],u={},s="Sum of Multiple Vectors",m={unversionedId:"examples/Standard Library/sum/ex_sum_multiple_vector",id:"examples/Standard Library/sum/ex_sum_multiple_vector",isDocsHomePage:!1,title:"Sum of Multiple Vectors",description:"This is an example of computing the sum of a multiple vector inputs.",source:"@site/docs/examples/Standard Library/sum/ex_sum_multiple_vector.mdx",sourceDirName:"examples/Standard Library/sum",slug:"/examples/Standard Library/sum/ex_sum_multiple_vector",permalink:"/csdl/docs/examples/Standard Library/sum/ex_sum_multiple_vector",editUrl:"https://github.com/lsdolab/csdl/edit/main/website/docs/examples/Standard Library/sum/ex_sum_multiple_vector.mdx",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Sum of Multiple Tensors",permalink:"/csdl/docs/examples/Standard Library/sum/ex_sum_multiple_tensor"},next:{title:"Sum of a Single Matrix",permalink:"/csdl/docs/examples/Standard Library/sum/ex_sum_single_matrix"}},c=[],p={toc:c};function d(e){var t=e.components,r=(0,o.Z)(e,i);return(0,l.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"sum-of-multiple-vectors"},"Sum of Multiple Vectors"),(0,l.kt)("p",null,"This is an example of computing the sum of a multiple vector inputs."),(0,l.kt)(a.default,{mdxType:"WorkedExample"}))}d.isMDXComponent=!0},1364:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return i},contentTitle:function(){return u},metadata:function(){return s},toc:function(){return m},default:function(){return p}});var n=r(7462),o=r(3366),l=(r(7294),r(3905)),a=["components"],i={},u=void 0,s={unversionedId:"worked_examples/ex_sum_multiple_vector",id:"worked_examples/ex_sum_multiple_vector",isDocsHomePage:!1,title:"ex_sum_multiple_vector",description:"`py",source:"@site/docs/worked_examples/ex_sum_multiple_vector.mdx",sourceDirName:"worked_examples",slug:"/worked_examples/ex_sum_multiple_vector",permalink:"/csdl/docs/worked_examples/ex_sum_multiple_vector",editUrl:"https://github.com/lsdolab/csdl/edit/main/website/docs/worked_examples/ex_sum_multiple_vector.mdx",tags:[],version:"current",frontMatter:{}},m=[],c={toc:m};function p(e){var t=e.components,r=(0,o.Z)(e,a);return(0,l.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},"from csdl_om import Simulator\nfrom csdl import Model\nimport csdl\nimport numpy as np\n\n\nclass ExampleMultipleVector(Model):\n    def define(self):\n        n = 3\n\n        # Declare a vector of length 3 as input\n        v1 = self.declare_variable('v1', val=np.arange(n))\n\n        # Declare another vector of length 3 as input\n        v2 = self.declare_variable('v2', val=np.arange(n, 2 * n))\n\n        # Output the elementwise sum of vectors v1 and v2\n        self.register_output('multiple_vector_sum', csdl.sum(v1, v2))\n\n\nsim = Simulator(ExampleMultipleVector())\nsim.run()\n\nprint('v1', sim['v1'].shape)\nprint(sim['v1'])\nprint('v2', sim['v2'].shape)\nprint(sim['v2'])\nprint('multiple_vector_sum', sim['multiple_vector_sum'].shape)\nprint(sim['multiple_vector_sum'])\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-v1",metastring:"(3,)","(3,)":!0},"[0. 1. 2.]\nv2 (3,)\n[3. 4. 5.]\nmultiple_vector_sum (3,)\n[3. 5. 7.]\n")))}p.isMDXComponent=!0}}]);