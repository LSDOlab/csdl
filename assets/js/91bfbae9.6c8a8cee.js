"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7002],{3905:function(e,n,t){t.d(n,{Zo:function(){return s},kt:function(){return d}});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var p=r.createContext({}),c=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},s=function(e){var n=c(e.components);return r.createElement(p.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},_=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),_=c(t),d=i,u=_["".concat(p,".").concat(d)]||_[d]||m[d]||o;return t?r.createElement(u,a(a({ref:n},s),{},{components:t})):r.createElement(u,a({ref:n},s))}));function d(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,a=new Array(o);a[0]=_;var l={};for(var p in n)hasOwnProperty.call(n,p)&&(l[p]=n[p]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var c=2;c<o;c++)a[c]=t[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}_.displayName="MDXCreateElement"},1340:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return l},contentTitle:function(){return p},metadata:function(){return c},toc:function(){return s},default:function(){return _}});var r=t(7462),i=t(3366),o=(t(7294),t(3905)),a=["components"],l={},p=void 0,c={unversionedId:"worked_examples/ex_implicit_fixed_point_iteration",id:"worked_examples/ex_implicit_fixed_point_iteration",isDocsHomePage:!1,title:"ex_implicit_fixed_point_iteration",description:"`py",source:"@site/docs/worked_examples/ex_implicit_fixed_point_iteration.mdx",sourceDirName:"worked_examples",slug:"/worked_examples/ex_implicit_fixed_point_iteration",permalink:"/csdl/docs/worked_examples/ex_implicit_fixed_point_iteration",editUrl:"https://github.com/lsdolab/csdl/edit/main/website/docs/worked_examples/ex_implicit_fixed_point_iteration.mdx",tags:[],version:"current",frontMatter:{}},s=[],m={toc:s};function _(e){var n=e.components,t=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-py"},"from csdl_om import Simulator\nfrom csdl import Model, ScipyKrylov, NewtonSolver, NonlinearBlockGS\nimport numpy as np\n\n\nclass ExampleFixedPointIteration(Model):\n    def define(self):\n        # x == (3 + x - 2 * x**2)**(1 / 4)\n        m1 = Model()\n        x = m1.declare_variable('a')\n        r = m1.register_output('r', x - (3 + x - 2 * x**2)**(1 / 4))\n\n        # x == ((x + 3 - x**4) / 2)**(1 / 4)\n        m2 = Model()\n        x = m2.declare_variable('b')\n        r = m2.register_output('r', x - ((x + 3 - x**4) / 2)**(1 / 4))\n\n        # x == 0.5 * x\n        m3 = Model()\n        x = m3.declare_variable('c')\n        r = m3.register_output('r', x - 0.5 * x)\n\n        solve_fixed_point_iteration1 = self.create_implicit_operation(\n            m1)\n        solve_fixed_point_iteration1.declare_state('a', residual='r')\n        solve_fixed_point_iteration1.nonlinear_solver = NonlinearBlockGS(\n            maxiter=100)\n        a = solve_fixed_point_iteration1()\n\n        solve_fixed_point_iteration2 = self.create_implicit_operation(\n            m2)\n        solve_fixed_point_iteration2.declare_state('b', residual='r')\n        solve_fixed_point_iteration2.nonlinear_solver = NonlinearBlockGS(\n            maxiter=100)\n        b = solve_fixed_point_iteration2()\n\n        solve_fixed_point_iteration3 = self.create_implicit_operation(\n            m3)\n        solve_fixed_point_iteration3.declare_state('c', residual='r')\n        solve_fixed_point_iteration3.nonlinear_solver = NonlinearBlockGS(\n            maxiter=100)\n        c = solve_fixed_point_iteration3()\n\n\nsim = Simulator(ExampleFixedPointIteration())\nsim.run()\n\nprint('a', sim['a'].shape)\nprint(sim['a'])\nprint('b', sim['b'].shape)\nprint(sim['b'])\nprint('c', sim['c'].shape)\nprint(sim['c'])\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"================\nimplicit_op_004j\n================\nNL: NLBGS Converged in 45 iterations\n\n================\nimplicit_op_004l\n================\nNL: NLBGS Converged in 24 iterations\n\n================\nimplicit_op_004n\n================\nNL: NLBGS Converged in 34 iterations\na (1,)\n[1.12412303]\nb (1,)\n[1.07989607]\nc (1,)\n[5.82076609e-11]\n")))}_.isMDXComponent=!0}}]);