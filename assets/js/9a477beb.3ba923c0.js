"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[822],{3905:function(e,n,t){t.d(n,{Zo:function(){return d},kt:function(){return m}});var a=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=a.createContext({}),c=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},d=function(e){var n=c(e.components);return a.createElement(l.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},h=a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),h=c(t),m=i,u=h["".concat(l,".").concat(m)]||h[m]||p[m]||o;return t?a.createElement(u,r(r({ref:n},d),{},{components:t})):a.createElement(u,r({ref:n},d))}));function m(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,r=new Array(o);r[0]=h;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,r[1]=s;for(var c=2;c<o;c++)r[c]=t[c];return a.createElement.apply(null,r)}return a.createElement.apply(null,t)}h.displayName="MDXCreateElement"},5908:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return d},default:function(){return h}});var a=t(7462),i=t(3366),o=(t(7294),t(3905)),r=["components"],s={id:"faq",title:"Frequently Asked Questions"},l="Frequently Asked Questions",c={type:"mdx",permalink:"/csdl/faq",source:"@site/src/pages/faq.mdx"},d=[{value:"What is CSDL?",id:"what-is-csdl",children:[]},{value:"Why use CSDL?",id:"why-use-csdl",children:[]},{value:"What is the goal of this project?",id:"what-is-the-goal-of-this-project",children:[]},{value:"Who is CSDL for?",id:"who-is-csdl-for",children:[]},{value:"Who maintains CSDL?",id:"who-maintains-csdl",children:[]},{value:"Who uses CSDL?",id:"who-uses-csdl",children:[]},{value:"How do I install <code>csdl</code>?",id:"how-do-i-install-csdl",children:[]},{value:"Do I need to use the command line to compile my program?",id:"do-i-need-to-use-the-command-line-to-compile-my-program",children:[]},{value:"Why do I need to install two packages to install the CSDL compiler?",id:"why-do-i-need-to-install-two-packages-to-install-the-csdl-compiler",children:[]},{value:"What is the difference between CSDL, <code>csdl</code>, and the &quot;back end&quot;?",id:"what-is-the-difference-between-csdl-csdl-and-the-back-end",children:[]},{value:"Where can I run code written using CSDL?",id:"where-can-i-run-code-written-using-csdl",children:[]},{value:"Where is CSDL headed?",id:"where-is-csdl-headed",children:[]},{value:"How can I get involved?",id:"how-can-i-get-involved",children:[]}],p={toc:d};function h(e){var n=e.components,t=(0,i.Z)(e,r);return(0,o.kt)("wrapper",(0,a.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"frequently-asked-questions"},"Frequently Asked Questions"),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"what-is-csdl"},"What is CSDL?"),(0,o.kt)("p",null,"CSDL is a domain specific language for specifying mathematical models\nfor use in multidisciplinary design analysis and optimization (MDAO).\nCSDL is also a compiled language, which means that user code is\ntranslated into executable code before running the desired program.\nThe CSDL compiler is a three stage compiler with a front end, a middle\nend, and a back end.\nThe front end and middle end are implemented in the ",(0,o.kt)("inlineCode",{parentName:"p"},"csdl")," package,\nwhile the user is free to choose a back end from the list of available\nback ends to generate executable code.\nThe compilation process takes place within a Python script, and the user\ncan run the executable, or simulation, within the same script."),(0,o.kt)("h2",{id:"why-use-csdl"},"Why use CSDL?"),(0,o.kt)("p",null,"CSDL is a powerful language that enables users to specify a mathematical\nmodel of a physical system without regard for how to implement a\nsimulation for that specification, or which architecture is used to run\nthe simulation.\nCSDL is especially powerful in multidisciplinary design optimization\nwhere gradient-based approaches can be applied, due to their superior\nperformance over gradient-free approaches.\nMany modeling languages exist that excel at solving general nonlinear\nprograms, but those languages are typically restricted to a single\ndiscipline, do not fully automate derivative computation, or cannot\ncompute the derivatives required for optimization efficiently.\nThis leads to overhead for the user to specify a model as a single\ndiscipline, or implement derivative computation which may be difficult\nto maintain.\nCSDL automates derivative computation for individual operations and\nacross multiple disciplines.\nModel disciplines are typically tightly coupled, presenting a challenge\nfor derivative computation necessary for solving nonlinear programs\n(NLPs)."),(0,o.kt)("p",null,"CSDL enables users to specify mathematical models of physical systems in\ntwo ways: a functional style, and an object oriented style.\nThe functional style of model specification is a style that is similar\nto natural mathematical notation.\nThe object oriented style of model specification enables hierarchical\ncomposition of models.\nBoth styles make code easier to read and intuitive to use for\nmultidisciplinary design analysis and optimization applications."),(0,o.kt)("h2",{id:"what-is-the-goal-of-this-project"},"What is the goal of this project?"),(0,o.kt)("p",null,"The goal of CSDL is to separate model specification from simulation\nimplementation, eliminating overhead imposed on the model developer,\nwith emphasis given to solving multidisciplinary design optimization\nproblems.\nFor example, CSDL automatically computes derivatives (necessary for\ngradient-based optimization) across multiple disciplines without any\nadditional code from the user.\nComplete separation between model specification and simulation\nimplementation allows for the language to evolve to fit user needs\nwith little or no additional overhead for the user."),(0,o.kt)("h2",{id:"who-is-csdl-for"},"Who is CSDL for?"),(0,o.kt)("p",null,"CSDL is targeted at MDO researchers and practitioners, and as a result,\nis general enough for anyone who wishes to create a mathematical model\nof a physical system and simulate the behavior of that system, even if\noptimization is not a requirement.\nCSDL is especially powerful in multidisciplinary design optimization,\nwhere the model is composed of multiple disciplines that are\ntightly coupled, which presents a challenge to efficient derivative\ncomputation.\nThe tight coupling between disciplines requires computing derivatives of\nthe objective and constraints with respect to design variables in order\nfor an optimizer to update the values of the design variables.\nCSDL comes with an extensive standard library that automates derivative\ncomputation.\nUsers can define their own operations and the corresponding partial\nderivative for each operation as well using\n",(0,o.kt)("a",{parentName:"p",href:"docs/tutorial/advanced#custom-operations"},"custom operations"),"."),(0,o.kt)("h2",{id:"who-maintains-csdl"},"Who maintains CSDL?"),(0,o.kt)("p",null,"The ",(0,o.kt)("a",{parentName:"p",href:"https://lsdo.eng.ucsd.edu/"},"LSDO Lab at UCSD")," owns the repository\nfor the ",(0,o.kt)("inlineCode",{parentName:"p"},"csdl")," compiler front end source code and the ",(0,o.kt)("inlineCode",{parentName:"p"},"csdl_om")," compiler\nback end source code.\n",(0,o.kt)("a",{parentName:"p",href:"/community#core-development-team"},"Victor Gandarillas")," is the sole\nmaintainer for both ",(0,o.kt)("inlineCode",{parentName:"p"},"csdl")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"csdl_om")," (which is based on\n",(0,o.kt)("a",{parentName:"p",href:"https://openmdao.org/"},"OpenMDAO"),") at the moment, but more contributors\nare welcome.\nAs CSDL grows and evolves, we may set up various working groups to\nensure that CSDL meets the needs of our users"),(0,o.kt)("h2",{id:"who-uses-csdl"},"Who uses CSDL?"),(0,o.kt)("p",null,"Currently, the LSDO Lab at UCSD uses CSDL for a number of projects.\nIf you are a CSDL user and would like your organization or project to be\nfeatured on this website, please\n",(0,o.kt)("a",{parentName:"p",href:"mailto:vgandari@eng.ucsd.edu"},"let us know"),"."),(0,o.kt)("h2",{id:"how-do-i-install-csdl"},"How do I install ",(0,o.kt)("inlineCode",{parentName:"h2"},"csdl"),"?"),(0,o.kt)("p",null,"Please follow the instructions in the ",(0,o.kt)("a",{parentName:"p",href:"docs/tutorial/install"},"Tutorial"),"."),(0,o.kt)("h2",{id:"do-i-need-to-use-the-command-line-to-compile-my-program"},"Do I need to use the command line to compile my program?"),(0,o.kt)("p",null,"Users write CSDL source code, compile source code, and run the generated\nexecutable from within a single Python script\nRunning the Python script containing the CSDL source code and commands\nto compile and run a simulation is the only step required.\nAlthough CSDL is a compiled language, the compilation (creating a\n",(0,o.kt)("inlineCode",{parentName:"p"},"Simulator")," object) and execution (calling ",(0,o.kt)("inlineCode",{parentName:"p"},"Simulator.run"),")\nsteps are separated by lines of code within a script, rather than two\nseparate commands on a terminal/command line (e.g. for a simple program\nwritten in C, ",(0,o.kt)("inlineCode",{parentName:"p"},"gcc main.c")," followed by ",(0,o.kt)("inlineCode",{parentName:"p"},"a.out"),")."),(0,o.kt)("h2",{id:"why-do-i-need-to-install-two-packages-to-install-the-csdl-compiler"},"Why do I need to install two packages to install the CSDL compiler?"),(0,o.kt)("p",null,"CSDL is a language, and the CSDL compiler is implemented as a\n",(0,o.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Compiler#Three-stage_compiler_structure"},"three stage compiler"),",\nwhich consists of a front end that generates an intermediate\nrepresentation, a middle end that performs implementation independent\noptimizations on the intermediate representation, and a back end, which\ngenerates code in a target language, or generates an executable\ndirectly.\nCSDL is an embedded domain specific language (EDSL), which means\nthat CSDL is a ",(0,o.kt)("em",{parentName:"p"},"language within a language"),"; Python is the ",(0,o.kt)("em",{parentName:"p"},"host"),"\nlanguage for CSDL.\nThe ",(0,o.kt)("inlineCode",{parentName:"p"},"csdl")," package provides the front end and middle end of the CSDL\ncompiler, but the user is free to choose any CSDL compiler back end\nto implement a low level executable object to run a simulation.\nThe flexibility of choosing any back end means that all code written in\nCSDL could in theory run on any hardware, and implementation specific\ncode optimizations can be performed by the CSDL compiler without any\nchange to user code, the ",(0,o.kt)("inlineCode",{parentName:"p"},"csdl")," package, or the design of the CSDL\nlanguage.\nChoosing an implementation for a project is as simple as changing one\nline of code, ",(0,o.kt)("inlineCode",{parentName:"p"},"from <backend> import Simulator"),", where ",(0,o.kt)("inlineCode",{parentName:"p"},"<backend>"),"\n(including angle brackets) is replaced with the name of the package that\nimplements the ",(0,o.kt)("inlineCode",{parentName:"p"},"Simulator")," class."),(0,o.kt)("h2",{id:"what-is-the-difference-between-csdl-csdl-and-the-back-end"},"What is the difference between CSDL, ",(0,o.kt)("inlineCode",{parentName:"h2"},"csdl"),', and the "back end"?'),(0,o.kt)("p",null,"CSDL is a language for specifying a model of a physical system whose\nbehavior a user wants to simulate for the purpose of analysis or\noptimization.\nLike any language, CSDL requires an implementation (compiler or\ninterpreter) in order to generate and run software on a computer.\n.\nThe ",(0,o.kt)("inlineCode",{parentName:"p"},"csdl")," package contains the front end and middle end of the CSDL\ncompiler.\nThe ",(0,o.kt)("inlineCode",{parentName:"p"},"csdl")," package does not provide the complete implementation of the\nCSDL compiler; a separate package is required to supply the compiler\nback end.\nProjects using CSDL can use any of the back ends listed on the home page\nof the documentation for ",(0,o.kt)("inlineCode",{parentName:"p"},"csdl"),".\nAll back ends must provide a ",(0,o.kt)("inlineCode",{parentName:"p"},"Simulator")," class, which provides the\nsame API as the ",(0,o.kt)("inlineCode",{parentName:"p"},"SimulatorBase")," class provided in the ",(0,o.kt)("inlineCode",{parentName:"p"},"csdl"),"\npackage.\nConformance to a single API enables users to switch between back ends by\nchanging one line of code, ",(0,o.kt)("inlineCode",{parentName:"p"},"from <backend> import Simulator"),", where\n",(0,o.kt)("inlineCode",{parentName:"p"},"<backend>")," (including angle brackets) is replaced with the name of\nthe package that implements the ",(0,o.kt)("inlineCode",{parentName:"p"},"Simulator")," class."),(0,o.kt)("h2",{id:"where-can-i-run-code-written-using-csdl"},"Where can I run code written using CSDL?"),(0,o.kt)("p",null,"You may run CSDL on any platform that your chosen CSDL compiler back end\nsupports.\nConsult documentation for the compiler back end of your choice for more\ninformation.\nA list of available compiler back ends is available\n",(0,o.kt)("a",{parentName:"p",href:"/docs/backends"},"here"),"."),(0,o.kt)("h2",{id:"where-is-csdl-headed"},"Where is CSDL headed?"),(0,o.kt)("p",null,"CSDL is a very young project, so the short answer is, that's up to you!\nWe are currently using CSDL in a variety of projects, gathering user\nfeedback, and working with potential stakeholders to make sure CSDL\ncontinues to grow, benefit the MDO community, and make lasting impact.\nFeel free to use CSDL in your project, send us feedback, and engage\nwith the community."),(0,o.kt)("h2",{id:"how-can-i-get-involved"},"How can I get involved?"),(0,o.kt)("p",null,"Please see the ",(0,o.kt)("a",{parentName:"p",href:"community"},"Community")," page for more information on how\nto get in touch with other users and developers.\nPlease see the section on contributing to CSDL in the\n",(0,o.kt)("a",{parentName:"p",href:"docs/intro"},"Documentation"),"."))}h.isMDXComponent=!0}}]);