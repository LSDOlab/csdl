"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4459,8976],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return d}});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=r.createContext({}),a=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},p=function(e){var n=a(e.components);return r.createElement(s.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=a(t),d=i,x=u["".concat(s,".").concat(d)]||u[d]||m[d]||o;return t?r.createElement(x,c(c({ref:n},p),{},{components:t})):r.createElement(x,c({ref:n},p))}));function d(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,c=new Array(o);c[0]=u;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,c[1]=l;for(var a=2;a<o;a++)c[a]=t[a];return r.createElement.apply(null,c)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},3645:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return s},contentTitle:function(){return a},metadata:function(){return p},toc:function(){return m},default:function(){return d}});var r=t(7462),i=t(3366),o=(t(7294),t(3905)),c=t(7327),l=["components"],s={},a="Expressing Cyclic Relationships with Explicit Outputs",p={unversionedId:"examples/Basic Examples/cyclic_relationships",id:"examples/Basic Examples/cyclic_relationships",isDocsHomePage:!1,title:"Expressing Cyclic Relationships with Explicit Outputs",description:"We can also define a value in terms of itself.",source:"@site/docs/examples/Basic Examples/cyclic_relationships.mdx",sourceDirName:"examples/Basic Examples",slug:"/examples/Basic Examples/cyclic_relationships",permalink:"/csdl/docs/examples/Basic Examples/cyclic_relationships",editUrl:"https://github.com/lsdolab/csdl/edit/main/website/docs/examples/Basic Examples/cyclic_relationships.mdx",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Best Practices",permalink:"/csdl/docs/tutorial/best_practices"},next:{title:"Failing to Register Outputs Results in No Components",permalink:"/csdl/docs/examples/Basic Examples/ignored_outputs"}},m=[],u={toc:m};function d(e){var n=e.components,t=(0,i.Z)(e,l);return(0,o.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"expressing-cyclic-relationships-with-explicit-outputs"},"Expressing Cyclic Relationships with Explicit Outputs"),(0,o.kt)("p",null,"We can also define a value in terms of itself.\nIn the example below, consider three fixed point iterations.\nEach of these fixed point iterations is declared within its own\nsubsystem so that a solver may be assigned to it.\nNote that variables are not rpomoted so that we can use the same name to\nrefer to different variables, depending on which subsystem they belong\nto."),(0,o.kt)(c.default,{mdxType:"WorkedExample"}))}d.isMDXComponent=!0},7327:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return a},toc:function(){return p},default:function(){return u}});var r=t(7462),i=t(3366),o=(t(7294),t(3905)),c=["components"],l={},s=void 0,a={unversionedId:"worked_examples/ex_explicit_cycles",id:"worked_examples/ex_explicit_cycles",isDocsHomePage:!1,title:"ex_explicit_cycles",description:"`py",source:"@site/docs/worked_examples/ex_explicit_cycles.mdx",sourceDirName:"worked_examples",slug:"/worked_examples/ex_explicit_cycles",permalink:"/csdl/docs/worked_examples/ex_explicit_cycles",editUrl:"https://github.com/lsdolab/csdl/edit/main/website/docs/worked_examples/ex_explicit_cycles.mdx",tags:[],version:"current",frontMatter:{}},p=[],m={toc:p};function u(e){var n=e.components,t=(0,i.Z)(e,c);return(0,o.kt)("wrapper",(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-py"},"from csdl_om import Simulator\nfrom csdl import Model, NonlinearBlockGS\nimport csdl\nimport numpy as np\n\n\nclass ExampleCycles(Model):\n    def define(self):\n        # x == (3 + x - 2 * x**2)**(1 / 4)\n        model = Model()\n        x = model.create_output('x')\n        x.define((3 + x - 2 * x**2)**(1 / 4))\n        model.nonlinear_solver = NonlinearBlockGS(maxiter=100)\n        self.add(model, name='cycle_1', promotes=[])\n\n        # x == ((x + 3 - x**4) / 2)**(1 / 4)\n        model = Model()\n        x = model.create_output('x')\n        x.define(((x + 3 - x**4) / 2)**(1 / 4))\n        model.nonlinear_solver = NonlinearBlockGS(maxiter=100)\n        self.add(model, name='cycle_2', promotes=[])\n\n        # x == 0.5 * x\n        model = Model()\n        x = model.create_output('x')\n        x.define(0.5 * x)\n        model.nonlinear_solver = NonlinearBlockGS(maxiter=100)\n        self.add(model, name='cycle_3', promotes=[])\n\n\nsim = Simulator(ExampleCycles())\nsim.run()\n\nprint('cycle_1.x', sim['cycle_1.x'].shape)\nprint(sim['cycle_1.x'])\nprint('cycle_2.x', sim['cycle_2.x'].shape)\nprint(sim['cycle_2.x'])\nprint('cycle_3.x', sim['cycle_3.x'].shape)\nprint(sim['cycle_3.x'])\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"=======\ncycle_1\n=======\nNL: NLBGS Converged in 47 iterations\n\n=======\ncycle_2\n=======\nNL: NLBGS Converged in 26 iterations\n\n=======\ncycle_3\n=======\nNL: NLBGS Converged in 34 iterations\ncycle_1.x (1,)\n[1.12412303]\ncycle_2.x (1,)\n[1.07989607]\ncycle_3.x (1,)\n[5.82076609e-11]\n")))}u.isMDXComponent=!0}}]);